/**
 * Copyright (c) 2023 Dassault Aviation
 *
 * SPDX-License-Identifier: MIT
 */
package edtimplementation.provider;

import edtimplementation.util.EdtimplementationAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class EdtimplementationItemProviderAdapterFactory extends EdtimplementationAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EdtimplementationItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ComponentImplementation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentImplementationItemProvider componentImplementationItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ComponentImplementation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentImplementationAdapter() {
		if (componentImplementationItemProvider == null) {
			componentImplementationItemProvider = new ComponentImplementationItemProvider(this);
		}

		return componentImplementationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ComponentImplementationReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentImplementationReferenceItemProvider componentImplementationReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ComponentImplementationReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentImplementationReferenceAdapter() {
		if (componentImplementationReferenceItemProvider == null) {
			componentImplementationReferenceItemProvider = new ComponentImplementationReferenceItemProvider(this);
		}

		return componentImplementationReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ComponentImplementationService} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentImplementationServiceItemProvider componentImplementationServiceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ComponentImplementationService}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentImplementationServiceAdapter() {
		if (componentImplementationServiceItemProvider == null) {
			componentImplementationServiceItemProvider = new ComponentImplementationServiceItemProvider(this);
		}

		return componentImplementationServiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ModuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleTypeItemProvider moduleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ModuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleTypeAdapter() {
		if (moduleTypeItemProvider == null) {
			moduleTypeItemProvider = new ModuleTypeItemProvider(this);
		}

		return moduleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventTypeItemProvider eventTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventTypeAdapter() {
		if (eventTypeItemProvider == null) {
			eventTypeItemProvider = new EventTypeItemProvider(this);
		}

		return eventTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestResponseType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestResponseTypeItemProvider requestResponseTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestResponseType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestResponseTypeAdapter() {
		if (requestResponseTypeItemProvider == null) {
			requestResponseTypeItemProvider = new RequestResponseTypeItemProvider(this);
		}

		return requestResponseTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventSent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventSentItemProvider eventSentItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventSent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventSentAdapter() {
		if (eventSentItemProvider == null) {
			eventSentItemProvider = new EventSentItemProvider(this);
		}

		return eventSentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventReceived} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventReceivedItemProvider eventReceivedItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventReceived}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventReceivedAdapter() {
		if (eventReceivedItemProvider == null) {
			eventReceivedItemProvider = new EventReceivedItemProvider(this);
		}

		return eventReceivedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.VersionedDataWritten} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionedDataWrittenItemProvider versionedDataWrittenItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.VersionedDataWritten}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionedDataWrittenAdapter() {
		if (versionedDataWrittenItemProvider == null) {
			versionedDataWrittenItemProvider = new VersionedDataWrittenItemProvider(this);
		}

		return versionedDataWrittenItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.VersionedDataRead} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionedDataReadItemProvider versionedDataReadItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.VersionedDataRead}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionedDataReadAdapter() {
		if (versionedDataReadItemProvider == null) {
			versionedDataReadItemProvider = new VersionedDataReadItemProvider(this);
		}

		return versionedDataReadItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestSent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestSentItemProvider requestSentItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestSent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestSentAdapter() {
		if (requestSentItemProvider == null) {
			requestSentItemProvider = new RequestSentItemProvider(this);
		}

		return requestSentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestReceived} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestReceivedItemProvider requestReceivedItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestReceived}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestReceivedAdapter() {
		if (requestReceivedItemProvider == null) {
			requestReceivedItemProvider = new RequestReceivedItemProvider(this);
		}

		return requestReceivedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.VersionedDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionedDataTypeItemProvider versionedDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.VersionedDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionedDataTypeAdapter() {
		if (versionedDataTypeItemProvider == null) {
			versionedDataTypeItemProvider = new VersionedDataTypeItemProvider(this);
		}

		return versionedDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ModuleImplementation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleImplementationItemProvider moduleImplementationItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ModuleImplementation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleImplementationAdapter() {
		if (moduleImplementationItemProvider == null) {
			moduleImplementationItemProvider = new ModuleImplementationItemProvider(this);
		}

		return moduleImplementationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ModuleInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleInstanceItemProvider moduleInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ModuleInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleInstanceAdapter() {
		if (moduleInstanceItemProvider == null) {
			moduleInstanceItemProvider = new ModuleInstanceItemProvider(this);
		}

		return moduleInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.TriggerInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggerInstanceItemProvider triggerInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.TriggerInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggerInstanceAdapter() {
		if (triggerInstanceItemProvider == null) {
			triggerInstanceItemProvider = new TriggerInstanceItemProvider(this);
		}

		return triggerInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.TriggerSender} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggerSenderItemProvider triggerSenderItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.TriggerSender}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggerSenderAdapter() {
		if (triggerSenderItemProvider == null) {
			triggerSenderItemProvider = new TriggerSenderItemProvider(this);
		}

		return triggerSenderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.DynamicTriggerInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicTriggerInstanceItemProvider dynamicTriggerInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.DynamicTriggerInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicTriggerInstanceAdapter() {
		if (dynamicTriggerInstanceItemProvider == null) {
			dynamicTriggerInstanceItemProvider = new DynamicTriggerInstanceItemProvider(this);
		}

		return dynamicTriggerInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventSenderInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventSenderInstanceItemProvider eventSenderInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventSenderInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventSenderInstanceAdapter() {
		if (eventSenderInstanceItemProvider == null) {
			eventSenderInstanceItemProvider = new EventSenderInstanceItemProvider(this);
		}

		return eventSenderInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventReceiverInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventReceiverInstanceItemProvider eventReceiverInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventReceiverInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventReceiverInstanceAdapter() {
		if (eventReceiverInstanceItemProvider == null) {
			eventReceiverInstanceItemProvider = new EventReceiverInstanceItemProvider(this);
		}

		return eventReceiverInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestClientInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestClientInstanceItemProvider requestClientInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestClientInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestClientInstanceAdapter() {
		if (requestClientInstanceItemProvider == null) {
			requestClientInstanceItemProvider = new RequestClientInstanceItemProvider(this);
		}

		return requestClientInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestServerInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestServerInstanceItemProvider requestServerInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestServerInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestServerInstanceAdapter() {
		if (requestServerInstanceItemProvider == null) {
			requestServerInstanceItemProvider = new RequestServerInstanceItemProvider(this);
		}

		return requestServerInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.DataWriterInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataWriterInstanceItemProvider dataWriterInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.DataWriterInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataWriterInstanceAdapter() {
		if (dataWriterInstanceItemProvider == null) {
			dataWriterInstanceItemProvider = new DataWriterInstanceItemProvider(this);
		}

		return dataWriterInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.DataReaderInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataReaderInstanceItemProvider dataReaderInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.DataReaderInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataReaderInstanceAdapter() {
		if (dataReaderInstanceItemProvider == null) {
			dataReaderInstanceItemProvider = new DataReaderInstanceItemProvider(this);
		}

		return dataReaderInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.DynamicTriggerEventReceiverInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicTriggerEventReceiverInstanceItemProvider dynamicTriggerEventReceiverInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.DynamicTriggerEventReceiverInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicTriggerEventReceiverInstanceAdapter() {
		if (dynamicTriggerEventReceiverInstanceItemProvider == null) {
			dynamicTriggerEventReceiverInstanceItemProvider = new DynamicTriggerEventReceiverInstanceItemProvider(this);
		}

		return dynamicTriggerEventReceiverInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.DynamicTriggerEventSenderInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicTriggerEventSenderInstanceItemProvider dynamicTriggerEventSenderInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.DynamicTriggerEventSenderInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicTriggerEventSenderInstanceAdapter() {
		if (dynamicTriggerEventSenderInstanceItemProvider == null) {
			dynamicTriggerEventSenderInstanceItemProvider = new DynamicTriggerEventSenderInstanceItemProvider(this);
		}

		return dynamicTriggerEventSenderInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ReferenceOfLinkedComponentDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceOfLinkedComponentDefinitionItemProvider referenceOfLinkedComponentDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ReferenceOfLinkedComponentDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceOfLinkedComponentDefinitionAdapter() {
		if (referenceOfLinkedComponentDefinitionItemProvider == null) {
			referenceOfLinkedComponentDefinitionItemProvider = new ReferenceOfLinkedComponentDefinitionItemProvider(this);
		}

		return referenceOfLinkedComponentDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ServiceOfLinkedComponentDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceOfLinkedComponentDefinitionItemProvider serviceOfLinkedComponentDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ServiceOfLinkedComponentDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceOfLinkedComponentDefinitionAdapter() {
		if (serviceOfLinkedComponentDefinitionItemProvider == null) {
			serviceOfLinkedComponentDefinitionItemProvider = new ServiceOfLinkedComponentDefinitionItemProvider(this);
		}

		return serviceOfLinkedComponentDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventDefinitionInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventDefinitionInstanceItemProvider eventDefinitionInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventDefinitionInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventDefinitionInstanceAdapter() {
		if (eventDefinitionInstanceItemProvider == null) {
			eventDefinitionInstanceItemProvider = new EventDefinitionInstanceItemProvider(this);
		}

		return eventDefinitionInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestReferenceInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestReferenceInstanceItemProvider requestReferenceInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestReferenceInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestReferenceInstanceAdapter() {
		if (requestReferenceInstanceItemProvider == null) {
			requestReferenceInstanceItemProvider = new RequestReferenceInstanceItemProvider(this);
		}

		return requestReferenceInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestServiceInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestServiceInstanceItemProvider requestServiceInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestServiceInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestServiceInstanceAdapter() {
		if (requestServiceInstanceItemProvider == null) {
			requestServiceInstanceItemProvider = new RequestServiceInstanceItemProvider(this);
		}

		return requestServiceInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.VersionedDataReferenceInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionedDataReferenceInstanceItemProvider versionedDataReferenceInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.VersionedDataReferenceInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionedDataReferenceInstanceAdapter() {
		if (versionedDataReferenceInstanceItemProvider == null) {
			versionedDataReferenceInstanceItemProvider = new VersionedDataReferenceInstanceItemProvider(this);
		}

		return versionedDataReferenceInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.VersionedDataServiceInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionedDataServiceInstanceItemProvider versionedDataServiceInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.VersionedDataServiceInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionedDataServiceInstanceAdapter() {
		if (versionedDataServiceInstanceItemProvider == null) {
			versionedDataServiceInstanceItemProvider = new VersionedDataServiceInstanceItemProvider(this);
		}

		return versionedDataServiceInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.DataLinkActivatableFifo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataLinkActivatableFifoItemProvider dataLinkActivatableFifoItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.DataLinkActivatableFifo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataLinkActivatableFifoAdapter() {
		if (dataLinkActivatableFifoItemProvider == null) {
			dataLinkActivatableFifoItemProvider = new DataLinkActivatableFifoItemProvider(this);
		}

		return dataLinkActivatableFifoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.DataLinkToServiceOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataLinkToServiceOperationItemProvider dataLinkToServiceOperationItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.DataLinkToServiceOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataLinkToServiceOperationAdapter() {
		if (dataLinkToServiceOperationItemProvider == null) {
			dataLinkToServiceOperationItemProvider = new DataLinkToServiceOperationItemProvider(this);
		}

		return dataLinkToServiceOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventLinkActivatableFifo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventLinkActivatableFifoItemProvider eventLinkActivatableFifoItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventLinkActivatableFifo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventLinkActivatableFifoAdapter() {
		if (eventLinkActivatableFifoItemProvider == null) {
			eventLinkActivatableFifoItemProvider = new EventLinkActivatableFifoItemProvider(this);
		}

		return eventLinkActivatableFifoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventLinkActivatingFifo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventLinkActivatingFifoItemProvider eventLinkActivatingFifoItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventLinkActivatingFifo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventLinkActivatingFifoAdapter() {
		if (eventLinkActivatingFifoItemProvider == null) {
			eventLinkActivatingFifoItemProvider = new EventLinkActivatingFifoItemProvider(this);
		}

		return eventLinkActivatingFifoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventLinkToDefinitionOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventLinkToDefinitionOperationItemProvider eventLinkToDefinitionOperationItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventLinkToDefinitionOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventLinkToDefinitionOperationAdapter() {
		if (eventLinkToDefinitionOperationItemProvider == null) {
			eventLinkToDefinitionOperationItemProvider = new EventLinkToDefinitionOperationItemProvider(this);
		}

		return eventLinkToDefinitionOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventLinkToDefinitionOperationFromTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventLinkToDefinitionOperationFromTriggerItemProvider eventLinkToDefinitionOperationFromTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventLinkToDefinitionOperationFromTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventLinkToDefinitionOperationFromTriggerAdapter() {
		if (eventLinkToDefinitionOperationFromTriggerItemProvider == null) {
			eventLinkToDefinitionOperationFromTriggerItemProvider = new EventLinkToDefinitionOperationFromTriggerItemProvider(this);
		}

		return eventLinkToDefinitionOperationFromTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventLinkActivatingFifoFromTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventLinkActivatingFifoFromTriggerItemProvider eventLinkActivatingFifoFromTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventLinkActivatingFifoFromTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventLinkActivatingFifoFromTriggerAdapter() {
		if (eventLinkActivatingFifoFromTriggerItemProvider == null) {
			eventLinkActivatingFifoFromTriggerItemProvider = new EventLinkActivatingFifoFromTriggerItemProvider(this);
		}

		return eventLinkActivatingFifoFromTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.EventLinkActivatableFifoFromTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventLinkActivatableFifoFromTriggerItemProvider eventLinkActivatableFifoFromTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.EventLinkActivatableFifoFromTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventLinkActivatableFifoFromTriggerAdapter() {
		if (eventLinkActivatableFifoFromTriggerItemProvider == null) {
			eventLinkActivatableFifoFromTriggerItemProvider = new EventLinkActivatableFifoFromTriggerItemProvider(this);
		}

		return eventLinkActivatableFifoFromTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestLinkActivatableFifo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestLinkActivatableFifoItemProvider requestLinkActivatableFifoItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestLinkActivatableFifo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestLinkActivatableFifoAdapter() {
		if (requestLinkActivatableFifoItemProvider == null) {
			requestLinkActivatableFifoItemProvider = new RequestLinkActivatableFifoItemProvider(this);
		}

		return requestLinkActivatableFifoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestLinkActivatingActivatableFifo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestLinkActivatingActivatableFifoItemProvider requestLinkActivatingActivatableFifoItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestLinkActivatingActivatableFifo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestLinkActivatingActivatableFifoAdapter() {
		if (requestLinkActivatingActivatableFifoItemProvider == null) {
			requestLinkActivatingActivatableFifoItemProvider = new RequestLinkActivatingActivatableFifoItemProvider(this);
		}

		return requestLinkActivatingActivatableFifoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.RequestLinkActivatingToReferenceOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestLinkActivatingToReferenceOperationItemProvider requestLinkActivatingToReferenceOperationItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.RequestLinkActivatingToReferenceOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestLinkActivatingToReferenceOperationAdapter() {
		if (requestLinkActivatingToReferenceOperationItemProvider == null) {
			requestLinkActivatingToReferenceOperationItemProvider = new RequestLinkActivatingToReferenceOperationItemProvider(this);
		}

		return requestLinkActivatingToReferenceOperationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.PublicPinfoValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublicPinfoValueItemProvider publicPinfoValueItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.PublicPinfoValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublicPinfoValueAdapter() {
		if (publicPinfoValueItemProvider == null) {
			publicPinfoValueItemProvider = new PublicPinfoValueItemProvider(this);
		}

		return publicPinfoValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.PrivatePinfoValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivatePinfoValueItemProvider privatePinfoValueItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.PrivatePinfoValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivatePinfoValueAdapter() {
		if (privatePinfoValueItemProvider == null) {
			privatePinfoValueItemProvider = new PrivatePinfoValueItemProvider(this);
		}

		return privatePinfoValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.PrivatePinfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivatePinfoItemProvider privatePinfoItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.PrivatePinfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivatePinfoAdapter() {
		if (privatePinfoItemProvider == null) {
			privatePinfoItemProvider = new PrivatePinfoItemProvider(this);
		}

		return privatePinfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.PublicPinfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublicPinfoItemProvider publicPinfoItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.PublicPinfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublicPinfoAdapter() {
		if (publicPinfoItemProvider == null) {
			publicPinfoItemProvider = new PublicPinfoItemProvider(this);
		}

		return publicPinfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.PropertyValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyValueItemProvider propertyValueItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.PropertyValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyValueAdapter() {
		if (propertyValueItemProvider == null) {
			propertyValueItemProvider = new PropertyValueItemProvider(this);
		}

		return propertyValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ModuleTypeProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleTypePropertyItemProvider moduleTypePropertyItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ModuleTypeProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleTypePropertyAdapter() {
		if (moduleTypePropertyItemProvider == null) {
			moduleTypePropertyItemProvider = new ModuleTypePropertyItemProvider(this);
		}

		return moduleTypePropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edtimplementation.ExternalSenderOperation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalSenderOperationItemProvider externalSenderOperationItemProvider;

	/**
	 * This creates an adapter for a {@link edtimplementation.ExternalSenderOperation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalSenderOperationAdapter() {
		if (externalSenderOperationItemProvider == null) {
			externalSenderOperationItemProvider = new ExternalSenderOperationItemProvider(this);
		}

		return externalSenderOperationItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (componentImplementationItemProvider != null) componentImplementationItemProvider.dispose();
		if (componentImplementationReferenceItemProvider != null) componentImplementationReferenceItemProvider.dispose();
		if (componentImplementationServiceItemProvider != null) componentImplementationServiceItemProvider.dispose();
		if (moduleTypeItemProvider != null) moduleTypeItemProvider.dispose();
		if (eventTypeItemProvider != null) eventTypeItemProvider.dispose();
		if (requestResponseTypeItemProvider != null) requestResponseTypeItemProvider.dispose();
		if (versionedDataTypeItemProvider != null) versionedDataTypeItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (eventSentItemProvider != null) eventSentItemProvider.dispose();
		if (eventReceivedItemProvider != null) eventReceivedItemProvider.dispose();
		if (versionedDataWrittenItemProvider != null) versionedDataWrittenItemProvider.dispose();
		if (versionedDataReadItemProvider != null) versionedDataReadItemProvider.dispose();
		if (requestSentItemProvider != null) requestSentItemProvider.dispose();
		if (requestReceivedItemProvider != null) requestReceivedItemProvider.dispose();
		if (moduleImplementationItemProvider != null) moduleImplementationItemProvider.dispose();
		if (triggerInstanceItemProvider != null) triggerInstanceItemProvider.dispose();
		if (triggerSenderItemProvider != null) triggerSenderItemProvider.dispose();
		if (dynamicTriggerInstanceItemProvider != null) dynamicTriggerInstanceItemProvider.dispose();
		if (dynamicTriggerEventReceiverInstanceItemProvider != null) dynamicTriggerEventReceiverInstanceItemProvider.dispose();
		if (dynamicTriggerEventSenderInstanceItemProvider != null) dynamicTriggerEventSenderInstanceItemProvider.dispose();
		if (moduleInstanceItemProvider != null) moduleInstanceItemProvider.dispose();
		if (eventSenderInstanceItemProvider != null) eventSenderInstanceItemProvider.dispose();
		if (eventReceiverInstanceItemProvider != null) eventReceiverInstanceItemProvider.dispose();
		if (requestClientInstanceItemProvider != null) requestClientInstanceItemProvider.dispose();
		if (requestServerInstanceItemProvider != null) requestServerInstanceItemProvider.dispose();
		if (dataWriterInstanceItemProvider != null) dataWriterInstanceItemProvider.dispose();
		if (dataReaderInstanceItemProvider != null) dataReaderInstanceItemProvider.dispose();
		if (referenceOfLinkedComponentDefinitionItemProvider != null) referenceOfLinkedComponentDefinitionItemProvider.dispose();
		if (serviceOfLinkedComponentDefinitionItemProvider != null) serviceOfLinkedComponentDefinitionItemProvider.dispose();
		if (eventDefinitionInstanceItemProvider != null) eventDefinitionInstanceItemProvider.dispose();
		if (requestReferenceInstanceItemProvider != null) requestReferenceInstanceItemProvider.dispose();
		if (requestServiceInstanceItemProvider != null) requestServiceInstanceItemProvider.dispose();
		if (versionedDataReferenceInstanceItemProvider != null) versionedDataReferenceInstanceItemProvider.dispose();
		if (versionedDataServiceInstanceItemProvider != null) versionedDataServiceInstanceItemProvider.dispose();
		if (externalSenderOperationItemProvider != null) externalSenderOperationItemProvider.dispose();
		if (dataLinkActivatableFifoItemProvider != null) dataLinkActivatableFifoItemProvider.dispose();
		if (dataLinkToServiceOperationItemProvider != null) dataLinkToServiceOperationItemProvider.dispose();
		if (eventLinkActivatableFifoItemProvider != null) eventLinkActivatableFifoItemProvider.dispose();
		if (eventLinkActivatingFifoItemProvider != null) eventLinkActivatingFifoItemProvider.dispose();
		if (eventLinkToDefinitionOperationItemProvider != null) eventLinkToDefinitionOperationItemProvider.dispose();
		if (eventLinkToDefinitionOperationFromTriggerItemProvider != null) eventLinkToDefinitionOperationFromTriggerItemProvider.dispose();
		if (eventLinkActivatingFifoFromTriggerItemProvider != null) eventLinkActivatingFifoFromTriggerItemProvider.dispose();
		if (eventLinkActivatableFifoFromTriggerItemProvider != null) eventLinkActivatableFifoFromTriggerItemProvider.dispose();
		if (requestLinkActivatableFifoItemProvider != null) requestLinkActivatableFifoItemProvider.dispose();
		if (requestLinkActivatingActivatableFifoItemProvider != null) requestLinkActivatingActivatableFifoItemProvider.dispose();
		if (requestLinkActivatingToReferenceOperationItemProvider != null) requestLinkActivatingToReferenceOperationItemProvider.dispose();
		if (publicPinfoValueItemProvider != null) publicPinfoValueItemProvider.dispose();
		if (privatePinfoValueItemProvider != null) privatePinfoValueItemProvider.dispose();
		if (privatePinfoItemProvider != null) privatePinfoItemProvider.dispose();
		if (publicPinfoItemProvider != null) publicPinfoItemProvider.dispose();
		if (propertyValueItemProvider != null) propertyValueItemProvider.dispose();
		if (moduleTypePropertyItemProvider != null) moduleTypePropertyItemProvider.dispose();
	}

}
