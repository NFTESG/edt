/**
 *
 * $Id$
 */
package technology.ecoa.insertion.policy._2.validation;

import org.eclipse.emf.ecore.EObject;

import technology.ecoa.insertion.policy._2.DefaultPINFO;
import technology.ecoa.insertion.policy._2.DefaultProperties;
import technology.ecoa.insertion.policy._2.DeploymentConstraints;
import technology.ecoa.insertion.policy._2.ECOAProfile;
import technology.ecoa.insertion.policy._2.ExtraConcerns;
import technology.ecoa.insertion.policy._2.MemoryUsage;
import technology.ecoa.insertion.policy._2.ModulesDependencies;
import technology.ecoa.insertion.policy._2.RealtimeCharacteristics;
import technology.ecoa.insertion.policy._2.RegisterSize;
import technology.ecoa.insertion.policy._2.TimeAccuracy;
import technology.ecoa.insertion.policy._2.TransportProtocol;

/**
 * A sample validator interface for {@link technology.ecoa.insertion.policy._2.InsertionPolicy}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface InsertionPolicyValidator {
	boolean validate();

	boolean validateTarget(String value);
	boolean validateProcessorTarget(EObject value);
	boolean validateRegisterSize(RegisterSize value);
	boolean validateMemoryUsage(MemoryUsage value);
	boolean validateRealtimeCharacteristics(RealtimeCharacteristics value);
	boolean validateTimeAccuracy(TimeAccuracy value);
	boolean validateTransportProtocol(TransportProtocol value);
	boolean validateDeploymentConstraints(DeploymentConstraints value);
	boolean validateECOAProfile(ECOAProfile value);
	boolean validateCompiler(technology.ecoa.insertion.policy._2.Compiler value);
	boolean validateGenericCompilationOptions(String value);
	boolean validateModulesDependencies(ModulesDependencies value);
	boolean validateExtraConcerns(ExtraConcerns value);
	boolean validateDefaultPINFO(DefaultPINFO value);
	boolean validateDefaultProperties(DefaultProperties value);
}
