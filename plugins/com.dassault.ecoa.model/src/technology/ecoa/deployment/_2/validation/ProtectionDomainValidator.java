/**
 *
 * $Id$
 */
package technology.ecoa.deployment._2.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import technology.ecoa.deployment._2.DeployedModuleInstanceType;
import technology.ecoa.deployment._2.DeployedTriggerInstanceType;
import technology.ecoa.deployment._2.ExecuteOnType;

/**
 * A sample validator interface for {@link technology.ecoa.deployment._2.ProtectionDomain}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ProtectionDomainValidator {
	boolean validate();

	boolean validateExecuteOn(ExecuteOnType value);
	boolean validateGroup(FeatureMap value);
	boolean validateDeployedModuleInstance(EList<DeployedModuleInstanceType> value);
	boolean validateDeployedTriggerInstance(EList<DeployedTriggerInstanceType> value);
	boolean validateName(String value);
}
