/**
 *
 * $Id$
 */
package technology.ecoa.implementation._2.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import technology.ecoa.implementation._2.OpRef;
import technology.ecoa.implementation._2.OpRefExternal;
import technology.ecoa.implementation._2.OpRefTrigger;

/**
 * A sample validator interface for {@link technology.ecoa.implementation._2.SendersType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface SendersTypeValidator {
	boolean validate();

	boolean validateGroup(FeatureMap value);
	boolean validateService(EList<OpRef> value);
	boolean validateReference(EList<OpRef> value);
	boolean validateModuleInstance(EList<OpRef> value);
	boolean validateTrigger(EList<OpRefTrigger> value);
	boolean validateDynamicTrigger(EList<OpRef> value);
	boolean validateExternal(EList<OpRefExternal> value);
}
