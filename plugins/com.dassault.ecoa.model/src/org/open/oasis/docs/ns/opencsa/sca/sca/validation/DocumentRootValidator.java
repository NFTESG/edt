/**
 *
 * $Id$
 */
package org.open.oasis.docs.ns.opencsa.sca.sca.validation;

import org.eclipse.emf.common.util.EMap;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.open.oasis.docs.ns.opencsa.sca.sca.ComponentType;
import org.open.oasis.docs.ns.opencsa.sca.sca.Composite;
import org.open.oasis.docs.ns.opencsa.sca.sca.ContributionType;
import org.open.oasis.docs.ns.opencsa.sca.sca.Documentation;
import org.open.oasis.docs.ns.opencsa.sca.sca.ExtensionsType;
import org.open.oasis.docs.ns.opencsa.sca.sca.Implementation;
import org.open.oasis.docs.ns.opencsa.sca.sca.ImplementationType;
import org.open.oasis.docs.ns.opencsa.sca.sca.Interface;
import org.open.oasis.docs.ns.opencsa.sca.sca.SCAImplementation;
import org.open.oasis.docs.ns.opencsa.sca.sca.ValueType;
import org.open.oasis.docs.ns.opencsa.sca.sca.WireFormatType;

/**
 * A sample validator interface for {@link org.open.oasis.docs.ns.opencsa.sca.sca.DocumentRoot}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface DocumentRootValidator {
	boolean validate();

	boolean validateMixed(FeatureMap value);
	boolean validateXMLNSPrefixMap(EMap<String, String> value);
	boolean validateXSISchemaLocation(EMap<String, String> value);
	boolean validateComponentType(ComponentType value);
	boolean validateComposite(Composite value);
	boolean validateDocumentation(Documentation value);
	boolean validateExtensions(ExtensionsType value);
	boolean validateImplementation(Implementation value);
	boolean validateImplementationType(ImplementationType value);
	boolean validateInterface(Interface value);
	boolean validateValue(ValueType value);
	boolean validateWireFormat(WireFormatType value);
	boolean validateContribution(ContributionType value);
	boolean validateImplementationComposite(SCAImplementation value);
}
