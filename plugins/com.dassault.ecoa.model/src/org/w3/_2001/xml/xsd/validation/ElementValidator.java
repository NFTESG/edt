/**
 *
 * $Id$
 */
package org.w3._2001.xml.xsd.validation;

import java.math.BigInteger;

import javax.xml.namespace.QName;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.w3._2001.xml.xsd.FormChoice;
import org.w3._2001.xml.xsd.Keybase;
import org.w3._2001.xml.xsd.KeyrefType;
import org.w3._2001.xml.xsd.LocalComplexType;
import org.w3._2001.xml.xsd.LocalSimpleType;

/**
 * A sample validator interface for {@link org.w3._2001.xml.xsd.Element}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ElementValidator {
	boolean validate();

	boolean validateSimpleType(LocalSimpleType value);
	boolean validateComplexType(LocalComplexType value);
	boolean validateIdentityConstraint(FeatureMap value);
	boolean validateUnique(EList<Keybase> value);
	boolean validateKey(EList<Keybase> value);
	boolean validateKeyref(EList<KeyrefType> value);
	boolean validateAbstract(boolean value);
	boolean validateBlock(Object value);
	boolean validateDefault(String value);
	boolean validateFinal(Object value);
	boolean validateFixed(String value);
	boolean validateForm(FormChoice value);
	boolean validateMaxOccurs(Object value);
	boolean validateMinOccurs(BigInteger value);
	boolean validateName(String value);
	boolean validateNillable(boolean value);
	boolean validateRef(QName value);
	boolean validateSubstitutionGroup(QName value);
	boolean validateType(QName value);
}
