/**
 *
 * $Id$
 */
package org.w3._2001.xml.xsd.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.w3._2001.xml.xsd.All;
import org.w3._2001.xml.xsd.Attribute;
import org.w3._2001.xml.xsd.AttributeGroupRef;
import org.w3._2001.xml.xsd.ComplexContentType;
import org.w3._2001.xml.xsd.ExplicitGroup;
import org.w3._2001.xml.xsd.GroupRef;
import org.w3._2001.xml.xsd.SimpleContentType;
import org.w3._2001.xml.xsd.Wildcard;

/**
 * A sample validator interface for {@link org.w3._2001.xml.xsd.ComplexType}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ComplexTypeValidator {
	boolean validate();

	boolean validateSimpleContent(SimpleContentType value);
	boolean validateComplexContent(ComplexContentType value);
	boolean validateGroup(GroupRef value);
	boolean validateAll(All value);
	boolean validateChoice(ExplicitGroup value);
	boolean validateSequence(ExplicitGroup value);
	boolean validateGroup1(FeatureMap value);
	boolean validateAttribute(EList<Attribute> value);
	boolean validateAttributeGroup(EList<AttributeGroupRef> value);
	boolean validateAnyAttribute1(Wildcard value);
	boolean validateAbstract(boolean value);
	boolean validateBlock(Object value);
	boolean validateFinal(Object value);
	boolean validateMixed(boolean value);
	boolean validateName(String value);
}
