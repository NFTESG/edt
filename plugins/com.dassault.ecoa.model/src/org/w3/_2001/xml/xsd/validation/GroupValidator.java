/**
 *
 * $Id$
 */
package org.w3._2001.xml.xsd.validation;

import java.math.BigInteger;

import javax.xml.namespace.QName;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.util.FeatureMap;

import org.w3._2001.xml.xsd.All;
import org.w3._2001.xml.xsd.AnyType;
import org.w3._2001.xml.xsd.ExplicitGroup;
import org.w3._2001.xml.xsd.GroupRef;
import org.w3._2001.xml.xsd.LocalElement;

/**
 * A sample validator interface for {@link org.w3._2001.xml.xsd.Group}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface GroupValidator {
	boolean validate();

	boolean validateParticle(FeatureMap value);
	boolean validateElement(EList<LocalElement> value);
	boolean validateGroup(EList<GroupRef> value);
	boolean validateAll(EList<All> value);
	boolean validateChoice(EList<ExplicitGroup> value);
	boolean validateSequence(EList<ExplicitGroup> value);
	boolean validateAny(EList<AnyType> value);
	boolean validateMaxOccurs(Object value);
	boolean validateMinOccurs(BigInteger value);
	boolean validateName(String value);
	boolean validateRef(QName value);
}
