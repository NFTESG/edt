<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/tree/description/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="ecoadt" version="12.0.0.2017041100">
  <ownedViewpoints name="ecoadt" modelFileExtension="ecoadt">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="CompositeDiagram" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='PasteComponent']" domainClass="edtproject::Composite">
      <metamodel href="../../com.dassault.ecoa.model/model/BinDesc.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/EcoaCommon20.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/UDPbinding.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/deployment.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/implementation.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/insertionPolicy.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/interface.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/logicalSystem.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/moduleBehaviour.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/project.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/qos.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/sca.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/scaExt.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/schema.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/types.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/uid.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/view.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTProject2.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTServices.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTTypes.ecore#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="ORTHOGONAL"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:BooleanLayoutOption" id="org.eclipse.elk.layered.mergeEdges" value="true">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.networkSimplex.nodeFlexibility.default">
          <targets>PARENT</targets>
          <value name="PORT_POSITION"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.edgeRouting.splines.mode">
          <targets>PARENT</targets>
          <value name="CONSERVATIVE_SOFT"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.bk.fixedAlignment">
          <targets>PARENT</targets>
          <value name="BALANCED"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>NODE</targets>
          <targets>PARENT</targets>
          <value name="SEPARATE_CHILDREN"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <nodeMappings name="EDTComponentNode" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20Component']" semanticCandidatesExpression="[self.Components/]" synchronizationLock="true" domainClass="edtproject::Component">
          <borderedNodeMappings name="ReferenceNode" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Delete%20BorderedNodes']" semanticCandidatesExpression="[self.ComponentReferences/]" synchronizationLock="true" domainClass="edtproject::ComponentReference">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionReference.name/]" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" arcWidth="8" arcHeight="8" roundedCorner="true" workspacePath="/com.dassault.edt.ui/icons/component_reference.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
            <conditionnalStyles predicateExpression="service:referenceWithError()">
              <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="8" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionReference.name/]" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" arcWidth="8" arcHeight="8" roundedCorner="true" workspacePath="/com.dassault.edt.ui/icons/component_reference.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="ServiceNode" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Delete%20BorderedNodes']" semanticCandidatesExpression="[self.ComponentServices/]" domainClass="edtproject.ComponentService">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionService.name/]" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" arcWidth="8" arcHeight="8" roundedCorner="true" workspacePath="/com.dassault.edt.ui/icons/component_service.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
            <conditionnalStyles predicateExpression="service:serviceWithError()">
              <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="8" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionService.name/]" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" arcWidth="8" arcHeight="8" roundedCorner="true" workspacePath="/com.dassault.edt.ui/icons/component_service.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>EAST</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="PropertyNode" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Delete%20BorderedNodes']" semanticCandidatesExpression="[self.Properties/]" domainClass="edtproject.ComponentProperty">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionProperty.name/]" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" arcWidth="15" arcHeight="15" workspacePath="/com.dassault.edt.ui/icons/component_property.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
            </style>
          </borderedNodeMappings>
          <style xsi:type="style:WorkspaceImageDescription" labelSize="18" showIcon="false" labelExpression="feature:Name" sizeComputationExpression="service:giveComponentSize()" labelPosition="node" resizeKind="NSEW" arcWidth="15" arcHeight="15" roundedCorner="true" workspacePath="/com.dassault.edt.ui/icons/component.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
          <conditionnalStyles predicateExpression="service:assemblyGraphicalViewWithError()">
            <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="8" labelSize="18" showIcon="false" labelExpression="feature:Name" sizeComputationExpression="service:giveComponentSize()" labelPosition="node" resizeKind="NSEW" arcWidth="15" arcHeight="15" roundedCorner="true" workspacePath="/com.dassault.edt.ui/icons/component.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="IOEdgeWire" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Delete%20ServiceLink']" semanticCandidatesExpression="feature:ServiceLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@nodeMappings[name='EDTComponentNode']/@borderedNodeMappings[name='ReferenceNode'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@nodeMappings[name='EDTComponentNode']/@borderedNodeMappings[name='ServiceNode']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@nodeMappings[name='EDTComponentNode']/@borderedNodeMappings[name='ServiceNode'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@nodeMappings[name='EDTComponentNode']/@borderedNodeMappings[name='ReferenceNode']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" domainClass="edtproject::ServiceLink" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.source.isServiceLinkCorrect(self.target)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <toolSections name="Creation">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Create new Component" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@nodeMappings[name='EDTComponentNode']" iconPath="/com.dassault.edt.ui/icons/24x24/component24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::Component" referenceName="Components" variableName="test">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:container.countComponent()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="PasteComponent" precondition="[copiedElement.oclIsTypeOf(edtproject::Component)/]" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject.Component" referenceName="Components">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:self.copyComponentAndRename(copiedElement)"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="No Delete BorderedNodes" precondition="false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:RemoveElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Create new ServiceLink" precondition="[preSource.serviceLinkCanBeCreated(preTarget)/]" edgeMappings="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']/@defaultLayer/@edgeMappings[name='IOEdgeWire']" iconPath="/com.dassault.edt.ui/icons/24x24/service_link 24.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[thisEObject.eContainer(edtproject::Composite)/]">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtproject::ComponentReference)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ServiceLink" referenceName="ServiceLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtproject::ComponentReference)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ServiceLink" referenceName="ServiceLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete Component">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:If" conditionExpression="service:element.hasNoServiceOrOperationLink()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Create..." precondition="[self.oclIsKindOf(edtproject::ComponentService)/]">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="All Links">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[self/]">
                  <subModelOperations xsi:type="tool_1:Let" variableName="source" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="service:source.findComponentReferences()" iteratorName="target">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[self.eContainer().eContainer()/]">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.serviceLinkCanBeCreated(source)/]">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtproject::ComponentReference)/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ServiceLink" referenceName="ServiceLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="Delete ServiceLink">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:If" conditionExpression="service:element.hasNoCrossReferences()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Legend">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Component" iconPath="/com.dassault.edt.ui/icons/24x24/component24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Service" iconPath="/com.dassault.edt.ui/icons/24x24/intput-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Reference" iconPath="/com.dassault.edt.ui/icons/24x24/output-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Property" iconPath="/com.dassault.edt.ui/icons/24x24/component_property24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="ServiceLink" iconPath="/com.dassault.edt.ui/icons/24x24/service_link 24.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Find in..." precondition="aql:not self.oclIsKindOf(edtproject::ServiceLink)">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="TreeView">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInTreeView()"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:TreeDescription" name="ProjectTree" domainClass="edtproject.Steps">
      <metamodel href="../../com.dassault.ecoa.model/model/BinDesc.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/EcoaCommon20.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/UDPbinding.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/deployment.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/implementation.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/insertionPolicy.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/interface.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/logicalSystem.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/moduleBehaviour.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/project.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/qos.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/sca.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/scaExt.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/schema.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/types.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/uid.ecore#/"/>
      <metamodel href="../../com.dassault.ecoa.model/model/view.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTProject2.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTServices.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTTypes.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTQos.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTImplementation.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTLogicalSystem.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTDeployment.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/toConvert.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/UDPBinding.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTBinDesc.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTUID.ecore#/"/>
      <subItemMappings name="Types" domainClass="edtproject.Step0" semanticCandidatesExpression="feature:Step">
        <defaultStyle labelExpression="feature:FolderName">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="NameSpace" domainClass="edttype.Library" semanticCandidatesExpression="feature:Types">
          <defaultStyle labelExpression="['NameSpace: '+Name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="ConstantDescription" domainClass="edttype.Library" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Constant(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="ConstantTree" domainClass="edttype.Constant" semanticCandidatesExpression="[thisEObject.DataTypes/]">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete Constant">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Constant" referenceName="DataTypes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfConstant()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Comment" valueExpression="[element.oclAsType(edttype::Constant).Comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="[element.oclAsType(edttype::Constant).value/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Type" valueExpression="[element.oclAsType(edttype::Constant).Type/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Constant">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Constant" referenceName="DataTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countConstants()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="SimpleDescription" domainClass="edttype.Library" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Simple(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="SimpleTree" domainClass="edttype.Simple" semanticCandidatesExpression="[thisEObject.DataTypes/]">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete Simple">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Simple" referenceName="DataTypes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfSimple()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Comment" valueExpression="[element.oclAsType(edttype::Simple).Comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="maxRange" valueExpression="[element.oclAsType(edttype::Simple).maxRange/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Type" valueExpression="[element.oclAsType(edttype::Simple).Type/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="minRange" valueExpression="[element.oclAsType(edttype::Simple).minRange/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="precision" valueExpression="[element.oclAsType(edttype::Simple).precision/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="unit" valueExpression="[element.oclAsType(edttype::Simple).unit/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Simple">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Simple" referenceName="DataTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countSimples()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="ArrayDescription" domainClass="edttype.Library" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Array(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="ArrayTree" domainClass="edttype.Array" semanticCandidatesExpression="[thisEObject.DataTypes/]">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete Array">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Array" referenceName="DataTypes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfArray()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Comment" valueExpression="[element.oclAsType(edttype::Array).Comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ItemType" valueExpression="[element.oclAsType(edttype::Array).ItemType/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="maxNumber" valueExpression="[element.oclAsType(edttype::Array).maxNumber/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Array">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Array" referenceName="DataTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countArrays()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="FixedArrayDescription" domainClass="edttype.Library" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="FixedArray(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="FixedArrayTree" domainClass="edttype.FixedArray" semanticCandidatesExpression="[thisEObject.DataTypes/]">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete Fixed Array">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::FixedArray" referenceName="DataTypes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfFixedArray()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Comment" valueExpression="[element.oclAsType(edttype::FixedArray).Comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ItemType" valueExpression="[element.oclAsType(edttype::FixedArray).ItemType/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="maxNumber" valueExpression="[element.oclAsType(edttype::FixedArray).maxNumber/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Fixed Array">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::FixedArray" referenceName="DataTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countFixedArrays()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="EnumDescription" domainClass="edttype.Library" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Enum(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="EnumTree" domainClass="edttype.Enum" semanticCandidatesExpression="[thisEObject.DataTypes/]">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="EnumValueTree" domainClass="edttype::EnumValue" semanticCandidatesExpression="[thisEObject.value/]">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::EnumValue" referenceName="value">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfEnumValue()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="[element.oclAsType(edttype::EnumValue).comment/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="valnum" valueExpression="[element.oclAsType(edttype::EnumValue).valnum/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="Delete Enum">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Enum" referenceName="DataTypes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfEnum()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Comment" valueExpression="[element.oclAsType(edttype::Enum).Comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="service:element.copyEnumValue()()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Type" valueExpression="[element.oclAsType(edttype::Enum).Type/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
              <popupMenus name="New...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New EnumValue">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::EnumValue" referenceName="value">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countEnumValues()"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="valnum" valueExpression="service:createEnumValueValnum()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Enum">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Enum" referenceName="DataTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countEnums()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="RecordDescription" domainClass="edttype.Library" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Record(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="RecordTree" domainClass="edttype.Record" semanticCandidatesExpression="[thisEObject.DataTypes/]">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="Field" domainClass="edttype.Field" semanticCandidatesExpression="[thisEObject.field/]">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Field" referenceName="field">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfRecordField()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="[element.oclAsType(edttype::Field).comment/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Type" valueExpression="[element.oclAsType(edttype::Field).Type/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="Delete Record">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Record" referenceName="DataTypes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfRecord()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Comment" valueExpression="[element.oclAsType(edttype::Record).Comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="field" valueExpression="service:element.copyRecordField()"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
              <popupMenus name="New...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Field">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Field" referenceName="field">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countFields()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Record">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Record" referenceName="DataTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countRecords()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="VariantRecord" domainClass="edttype.Library" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Variant Record(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="VariantRecordTree" domainClass="edttype.VariantRecord" semanticCandidatesExpression="[thisEObject.DataTypes/]">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="Field" domainClass="edttype.Field" semanticCandidatesExpression="[thisEObject.field/]">
                <defaultStyle labelExpression="['Field: ' +name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Field" referenceName="field">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfVariantRecordField()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="[element.oclAsType(edttype::Field).comment/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Type" valueExpression="[element.oclAsType(edttype::Field).Type/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <subItemMappings name="Union" domainClass="edttype.Union" semanticCandidatesExpression="[thisEObject.union/]">
                <defaultStyle labelExpression="['Union: '+name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Union" referenceName="union">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfVariantRecordUnion()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="[element.oclAsType(edttype::Union).comment/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edttype::Union).type/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="when" valueExpression="[element.oclAsType(edttype::Union).when/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="Delete Variant Record">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::VariantRecord" referenceName="DataTypes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfVariantRecord()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Comment" valueExpression="[element.oclAsType(edttype::VariantRecord).Comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="field" valueExpression="service:element.copyVariantRecordField()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="union" valueExpression="service:element.copyVariantRecordUnion()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="selectName" valueExpression="[element.oclAsType(edttype::VariantRecord).selectName/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="SelectType" valueExpression="[element.oclAsType(edttype::VariantRecord).SelectType/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
              <popupMenus name="New...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Union">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Union" referenceName="union">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countVariantRecordUnions()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
                <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='RecordDescription']/@subItemMappings[name='RecordTree']/@popupMenus.0/@menuItemDescriptions.0"/>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Variant Record">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::VariantRecord" referenceName="DataTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countVariantRecords()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="Delete Namespace">
            <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:isEmptyToDelete()">
              <subModelOperations xsi:type="tool_1:RemoveElement"/>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <create name="Create Copy of">
            <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Library" referenceName="Types">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfLibrary()"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="usedLibraries" valueExpression="[element.oclAsType(edttype::Library).usedLibraries/]"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="DataTypes" valueExpression="service:element.copyLibraryDataTypes()"/>
              </subModelOperations>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
          </create>
          <popupMenus name="Create...">
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='ConstantDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='SimpleDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='ArrayDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='FixedArrayDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='EnumDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='RecordDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Types']/@subItemMappings[name='NameSpace']/@subItemMappings[name='VariantRecord']/@popupMenus.0/@menuItemDescriptions.0"/>
          </popupMenus>
        </subItemMappings>
        <subItemMappings name="BasicTypes" domainClass="edtproject.Step0" semanticCandidatesExpression="[self/]">
          <defaultStyle labelExpression="Basic Types">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="BasicTree" domainClass="edttype.BasicType" semanticCandidatesExpression="feature:BasicTypes">
            <defaultStyle labelExpression="[Name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <delete name="Delete Basic Type" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
          </subItemMappings>
          <delete name="Delete Basic Type" precondition="false">
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
        </subItemMappings>
        <subItemMappings name="ECOAPredefinedTypes" domainClass="edtproject.Step0" semanticCandidatesExpression="[self/]">
          <defaultStyle labelExpression="ECOA Predefined Types">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="Simple" domainClass="edtproject.Step0" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Simple(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="SimpleTree" domainClass="edttype.SimplePredefined" semanticCandidatesExpression="[thisEObject.EcoaPredefinedTypes/]">
              <defaultStyle labelExpression="['ECOA:'+Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
          </subItemMappings>
          <subItemMappings name="Array" domainClass="edtproject.Step0" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Array(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="ArrayTree" domainClass="edttype.ArrayPredefined" semanticCandidatesExpression="[thisEObject.EcoaPredefinedTypes/]">
              <defaultStyle labelExpression="['ECOA:'+Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
          </subItemMappings>
          <subItemMappings name="Enum" domainClass="edtproject.Step0" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Enum(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="EnumTree" domainClass="edttype.EnumPredefined" semanticCandidatesExpression="[thisEObject.EcoaPredefinedTypes/]">
              <defaultStyle labelExpression="['ECOA:'+Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="EnumValueTree" domainClass="edttype::EnumValuePredefined" semanticCandidatesExpression="[thisEObject.value/]">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <delete name="Delete NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
          </subItemMappings>
          <subItemMappings name="Record" domainClass="edtproject.Step0" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Record(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="RecordTree" domainClass="edttype.RecordPredefined" semanticCandidatesExpression="[thisEObject.EcoaPredefinedTypes/]">
              <defaultStyle labelExpression="['ECOA:'+Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="Field" domainClass="edttype.FieldPredefined" semanticCandidatesExpression="[thisEObject.field/]">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <delete name="Delete NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
          </subItemMappings>
          <delete name="Delete NoDelete" precondition="false">
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
        </subItemMappings>
        <delete name="NoDelete" precondition="false">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
        </delete>
        <popupMenus name="Create...">
          <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Namespace">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edttype::Library" referenceName="Types">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countLibraries()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </menuItemDescriptions>
        </popupMenus>
        <popupMenus name="Expand">
          <menuItemDescriptions xsi:type="tool_1:OperationAction" name="All">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.expandAll()"/>
            </initialOperation>
          </menuItemDescriptions>
        </popupMenus>
      </subItemMappings>
      <subItemMappings name="Services" domainClass="edtproject.Step1" semanticCandidatesExpression="feature:Step">
        <defaultStyle labelExpression="feature:FolderName">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="ServiceTree" domainClass="edtinterface.ServiceDefinition" semanticCandidatesExpression="[Services/]">
          <defaultStyle labelExpression="[Name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="DataDescription" domainClass="edtinterface::ServiceDefinition" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Operation(s) VersionedData">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="DataTree" domainClass="edtinterface::Data" semanticCandidatesExpression="[thisEObject.operations/]">
              <defaultStyle>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete ServiceDefinitionOperation">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Data" referenceName="operations">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfServiceDefinitionData()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="[element.oclAsType(edtinterface::Data).comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtinterface::Data).type/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Operation VersionedData">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Data" referenceName="operations">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countDatas()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="EventDescription" domainClass="edtinterface::ServiceDefinition" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Operation(s) Event">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="EventTree" domainClass="edtinterface::Event" semanticCandidatesExpression="[thisEObject.operations/]">
              <defaultStyle>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="InputTree" domainClass="edtinterface::Parameter" semanticCandidatesExpression="[thisEObject.input/]">
                <defaultStyle labelExpression="aql:'input: '+self.name">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <create name="Create copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Parameter" referenceName="input">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfServiceDefinitionEventInput()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtinterface::Parameter).type/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="Delete ServiceDefinitionOperation">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Event" referenceName="operations">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfServiceDefinitionEvent()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="input" valueExpression="service:element.copyEventInput()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="[element.oclAsType(edtinterface::Event).comment/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="direction" valueExpression="[element.oclAsType(edtinterface::Event).direction/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Event Input">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Parameter" referenceName="input">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countEventInputs()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Operation Event">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Event" referenceName="operations">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countEvents()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="RequestResponseDescription" domainClass="edtinterface::ServiceDefinition" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Operation(s) RequestResponse">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="RequestResponseTree" domainClass="edtinterface::RequestResponse" semanticCandidatesExpression="[thisEObject.operations/]">
              <defaultStyle>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="InputTree" domainClass="edtinterface::Parameter" semanticCandidatesExpression="[thisEObject.input/]">
                <defaultStyle labelExpression="aql:'input: '+self.name">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <create name="Create copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Parameter" referenceName="input">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfServiceDefinitionRequestResponseInput()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtinterface::Parameter).type/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <subItemMappings name="OutputTree" domainClass="edtinterface::Parameter" semanticCandidatesExpression="[thisEObject.output/]">
                <defaultStyle labelExpression="aql:'output: '+self.name">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <create name="Create copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Parameter" referenceName="output">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfServiceDefinitionRequestResponseOutput()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtinterface::Parameter).type/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="Delete ServiceDefinitionOperation">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::RequestResponse" referenceName="operations">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfServiceDefinitionRequestResponse()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="input" valueExpression="service:element.copyRequestResponseInput()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="output" valueExpression="service:element.copyRequestResponseOutput()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="comment" valueExpression="[element.oclAsType(edtinterface::RequestResponse).comment/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Request Response Input">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Parameter" referenceName="input">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countRequestResponsesInputs()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Request Response Output">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::Parameter" referenceName="output">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countRequestResponsesOutputs()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Operation RequestResponse">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::RequestResponse" referenceName="operations">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countRequestResponses()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="Delete Service Definition">
            <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
              <subModelOperations xsi:type="tool_1:RemoveElement"/>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <create name="Create Copy of">
            <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::ServiceDefinition" referenceName="Services">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfServiceDefinition()"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="usedLibraries" valueExpression="[element.oclAsType(edtinterface::ServiceDefinition).usedLibraries/]"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="operations" valueExpression="service:element.copyServiceDefinitionOperations()"/>
              </subModelOperations>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
          </create>
          <popupMenus name="Create...">
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Services']/@subItemMappings[name='ServiceTree']/@subItemMappings[name='DataDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Services']/@subItemMappings[name='ServiceTree']/@subItemMappings[name='EventDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Services']/@subItemMappings[name='ServiceTree']/@subItemMappings[name='RequestResponseDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
          </popupMenus>
        </subItemMappings>
        <delete name="NoDelete" precondition="false">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
        </delete>
        <popupMenus name="Create...">
          <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Service Definition">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtinterface::ServiceDefinition" referenceName="Services">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countServiceDefinitions()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </menuItemDescriptions>
        </popupMenus>
      </subItemMappings>
      <subItemMappings name="ComponentDefinition" domainClass="edtproject.Step2" semanticCandidatesExpression="feature:Step">
        <defaultStyle labelExpression="feature:FolderName">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="ComponentTypeFolderDescription" domainClass="edtproject.ComponentDefinition" semanticCandidatesExpression="feature:ComponentDefinitions">
          <defaultStyle labelExpression="[Name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="ComponentType" domainClass="edtproject.ComponentDefinition" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="['ComponentDefinition '+Name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="Service(s)Description" domainClass="edtproject.ComponentDefinition" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Service(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ServiceTree" domainClass="edtproject.ComponentDefinitionService" semanticCandidatesExpression="feature:Services">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete Component Definition Service">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ComponentDefinitionService" referenceName="Services">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfComponentDefinitionService()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Qos" valueExpression="[element.oclAsType(edtproject::ComponentDefinitionService).Qos/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Syntax" valueExpression="[element.oclAsType(edtproject::ComponentDefinitionService).Syntax/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Component Definition Service">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ComponentDefinitionService" referenceName="Services">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countComponentDefinitionServices()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="Reference(s)Description" domainClass="edtproject.ComponentDefinition" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Reference(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ReferenceTree" domainClass="edtproject.ComponentDefinitionReference" semanticCandidatesExpression="feature:References">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete Component Definition Reference">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ComponentDefinitionReference" referenceName="References">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfComponentDefinitionReference()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Syntax" valueExpression="[element.oclAsType(edtproject::ComponentDefinitionReference).Syntax/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Qos" valueExpression="[element.oclAsType(edtproject::ComponentDefinitionReference).Qos/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="multiplicity" valueExpression="[element.oclAsType(edtproject::ComponentDefinitionReference).multiplicity/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Component Definition Reference">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ComponentDefinitionReference" referenceName="References">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countComponentDefinitionReferences()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="Property(ies)Description" domainClass="edtproject.ComponentDefinition" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Properties">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="PropertyTree" domainClass="edtproject.Property" semanticCandidatesExpression="feature:Properties">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete Component Definition Property">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferencesForComponentDefinitionProperty()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::Property" referenceName="Properties">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfComponentDefinitionOrCompositeProperties()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtproject::Property).type/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="mustSupply" valueExpression="[element.oclAsType(edtproject::Property).mustSupply/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Value" valueExpression="[element.oclAsType(edtproject::Property).Value/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ECOASCAType" valueExpression="[element.oclAsType(edtproject::Property).ECOASCAType/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ECOASCALibrary" valueExpression="[element.oclAsType(edtproject::Property).ECOASCALibrary/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Component Definition Property">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::Property" referenceName="Properties">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countComponentDefinitionOrCompositeProperties()"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="xsd:string"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentDefinition']/@subItemMappings[name='ComponentTypeFolderDescription']/@subItemMappings[name='ComponentType']/@subItemMappings[name='Service(s)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentDefinition']/@subItemMappings[name='ComponentTypeFolderDescription']/@subItemMappings[name='ComponentType']/@subItemMappings[name='Reference(s)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentDefinition']/@subItemMappings[name='ComponentTypeFolderDescription']/@subItemMappings[name='ComponentType']/@subItemMappings[name='Property(ies)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="ServiceInstanceQos(s)Description" domainClass="edtproject.ComponentDefinition" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Service QoS">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="ServiceQoSTree" domainClass="edtqos::ServiceInstanceQos" semanticCandidatesExpression="feature:AssociatedServiceQos">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="DataQoSDescription" domainClass="edtqos::ServiceInstanceQos" semanticCandidatesExpression="[self/]">
                <defaultStyle labelExpression="Operation(s) QoS VersionedData">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="DataTree" domainClass="edtqos::Data" semanticCandidatesExpression="[thisEObject.operations/]">
                  <defaultStyle labelExpression="[name/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <delete name="NoDelete" precondition="false">
                    <variables name="root" documentation="The semantic element of the tree."/>
                    <variables name="element" documentation="The currently edited element."/>
                  </delete>
                </subItemMappings>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <subItemMappings name="EventQoSDescription" domainClass="edtqos::ServiceInstanceQos" semanticCandidatesExpression="[self/]">
                <defaultStyle labelExpression="Operation(s) QoS Event">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="EventTree" domainClass="edtqos::Event" semanticCandidatesExpression="[thisEObject.operations/]">
                  <defaultStyle labelExpression="[name/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <delete name="NoDelete" precondition="false">
                    <variables name="root" documentation="The semantic element of the tree."/>
                    <variables name="element" documentation="The currently edited element."/>
                  </delete>
                </subItemMappings>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <subItemMappings name="RequestResponseQoSDescription" domainClass="edtqos::ServiceInstanceQos" semanticCandidatesExpression="[self/]">
                <defaultStyle labelExpression="Operation(s) QoS RequestResponse">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="RequestResponseTree" domainClass="edtqos::RequestResponse" semanticCandidatesExpression="[thisEObject.operations/]">
                  <defaultStyle labelExpression="[name/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <delete name="NoDelete" precondition="false">
                    <variables name="root" documentation="The semantic element of the tree."/>
                    <variables name="element" documentation="The currently edited element."/>
                  </delete>
                </subItemMappings>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <delete name="Delete Service QoS">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtqos::ServiceInstanceQos" referenceName="AssociatedServiceQos">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfServiceQoS()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="operations" valueExpression="service:element.copyQoSOperations()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ServiceDefinition" valueExpression="[element.oclAsType(edtqos::ServiceInstanceQos).ServiceDefinition/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New ServiceQoS">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtqos::ServiceInstanceQos" referenceName="AssociatedServiceQos">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countServiceQoS()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="Delete ComponentDefinition">
            <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
              <subModelOperations xsi:type="tool_1:RemoveElement"/>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <create name="Create Copy of">
            <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ComponentDefinition" referenceName="ComponentDefinitions">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.setNameToCopyOfComponentDefinition()"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Properties" valueExpression="service:element.copyComponentDefinitionProperties()"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="References" valueExpression="service:element.copyComponentDefinitionReferences()"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="Services" valueExpression="service:element.copyComponentDefinitionServices()"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="AssociatedServiceQos" valueExpression="service:element.copyComponentDefinitionAssociatedQoS(instance)"/>
              </subModelOperations>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
          </create>
        </subItemMappings>
        <delete name="NoDelete" precondition="false">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
        </delete>
        <popupMenus name="New...">
          <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New ComponentDefinition">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::ComponentDefinition" referenceName="ComponentDefinitions">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countComponentDefinition()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </menuItemDescriptions>
        </popupMenus>
      </subItemMappings>
      <subItemMappings name="InitialAssembly" domainClass="edtproject.Step3" semanticCandidatesExpression="feature:Step">
        <defaultStyle labelExpression="feature:FolderName">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="Composite" domainClass="edtproject.Composite" preconditionExpression="[self.Components->size()>0/]" semanticCandidatesExpression="feature:InitialAssembly">
          <defaultStyle labelExpression="['Initial Assembly: '+Name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="Component" domainClass="edtproject.Component" semanticCandidatesExpression="feature:Components">
            <defaultStyle labelExpression="['Component: '+Name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="Service(s)Description" domainClass="edtproject.Component" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Service(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ServiceTree" domainClass="edtproject.ComponentService" semanticCandidatesExpression="feature:ComponentServices">
                <defaultStyle labelExpression="[Name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="AssemblyGraph">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInAssembly()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <subItemMappings name="Reference(s)Description" domainClass="edtproject.Component" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Reference(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ReferenceTree" domainClass="edtproject.ComponentReference" semanticCandidatesExpression="feature:ComponentReferences">
                <defaultStyle labelExpression="[Name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="AssemblyGraph">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInAssembly()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <subItemMappings name="Property(ies)Description" domainClass="edtproject.Component" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Property(ies)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="PropertyTree" domainClass="edtproject.ComponentProperty" semanticCandidatesExpression="feature:Properties">
                <defaultStyle labelExpression="[Name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="AssemblyGraph">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInAssembly()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Find in...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="AssemblyGraph">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInAssembly()"/>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="Property(ies)Description" domainClass="edtproject.Composite" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Properties">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="PropertyTree" domainClass="edtproject.Property" semanticCandidatesExpression="feature:Properties">
              <defaultStyle labelExpression="[name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete CompositeProperty">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::Property" referenceName="Properties">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['copy_of_'+element.oclAsType(edtproject::Property).name/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtproject::Property).type/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="mustSupply" valueExpression="[element.oclAsType(edtproject::Property).mustSupply/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Value" valueExpression="[element.oclAsType(edtproject::Property).Value/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ECOASCAType" valueExpression="[element.oclAsType(edtproject::Property).ECOASCAType/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ECOASCALibrary" valueExpression="[element.oclAsType(edtproject::Property).ECOASCALibrary/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Composite Property">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::Property" referenceName="Properties">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countComponentDefinitionOrCompositeProperties()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="xsd:string"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="NoDelete" precondition="false">
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <popupMenus name="Create...">
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='InitialAssembly']/@subItemMappings[name='Composite']/@subItemMappings[name='Property(ies)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
          </popupMenus>
        </subItemMappings>
        <delete name="NoDelete" precondition="false">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
        </delete>
      </subItemMappings>
      <subItemMappings name="ComponentImplementations" domainClass="edtproject::Step4" semanticCandidatesExpression="feature:Step">
        <defaultStyle labelExpression="feature:FolderName">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="ComponentImplementationFolderDescription" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="feature:ComponentImplementations">
          <defaultStyle labelExpression="[name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="ComponentImplementation" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="['Component Implementation '+name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="Service(s)Description" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Service(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ServiceTree" domainClass="edtimplementation::ComponentImplementationService" semanticCandidatesExpression="feature:services">
                <defaultStyle labelExpression="[thisEObject.ComponentDefinitionService.name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Component Implementation Service">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ComponentImplementationService" referenceName="services"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="Reference(s)Description" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Reference(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ReferenceTree" domainClass="edtimplementation::ComponentImplementationReference" semanticCandidatesExpression="feature:references">
                <defaultStyle labelExpression="[thisEObject.ComponentDefinitionReference.name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Component Implementation Reference">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ComponentImplementationReference" referenceName="references"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="ModuleTypesDescription" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="ModuleTypes">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ModuleTypesTree" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="feature:ModuleTypes">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="OperationDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                  <defaultStyle labelExpression="Operations">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <subItemMappings name="VersionedDataWrittenDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                    <defaultStyle labelExpression="Versioned Data Written">
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <subItemMappings name="VersionedDataWrittenTree" domainClass="edtimplementation::VersionedDataWritten" semanticCandidatesExpression="feature:operations">
                      <defaultStyle>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      </defaultStyle>
                      <delete name="Delete VersionedDataWritten">
                        <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                      </delete>
                      <create name="Create Copy of">
                        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::VersionedDataWritten" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeDataWritten()"/>
                          </subModelOperations>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                        <variables name="container" documentation="The semantic element corresponding to the view container."/>
                      </create>
                    </subItemMappings>
                    <delete name="NoDelete" precondition="false">
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                    </delete>
                    <popupMenus name="Create...">
                      <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Operation Versioned Data Written">
                        <view name="views"/>
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::VersionedDataWritten" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeDataWritten()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </menuItemDescriptions>
                    </popupMenus>
                  </subItemMappings>
                  <subItemMappings name="VersionedDataReadDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                    <defaultStyle labelExpression="Versioned Data Read">
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <subItemMappings name="VersionedDataReadTree" domainClass="edtimplementation::VersionedDataRead" semanticCandidatesExpression="feature:operations">
                      <defaultStyle>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      </defaultStyle>
                      <delete name="Delete VersionedDataRead">
                        <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                      </delete>
                      <create name="Create Copy of">
                        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::VersionedDataRead" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeDataRead()"/>
                          </subModelOperations>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                        <variables name="container" documentation="The semantic element corresponding to the view container."/>
                      </create>
                    </subItemMappings>
                    <delete name="NoDelete" precondition="false">
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                    </delete>
                    <popupMenus name="Create...">
                      <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Operation Versioned Data Read">
                        <view name="views"/>
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::VersionedDataRead" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeDataRead()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </menuItemDescriptions>
                    </popupMenus>
                  </subItemMappings>
                  <subItemMappings name="EventSentDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                    <defaultStyle labelExpression="Event Sent">
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <subItemMappings name="EventSentTree" domainClass="edtimplementation::EventSent" semanticCandidatesExpression="feature:operations">
                      <defaultStyle>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      </defaultStyle>
                      <subItemMappings name="InputTree" domainClass="edtimplementation::Parameter" semanticCandidatesExpression="[thisEObject.input/]">
                        <defaultStyle labelExpression="aql:'input: '+self.name">
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        </defaultStyle>
                        <create name="Create copy of">
                          <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeEventInputs()"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtimplementation::Parameter).type/]"/>
                            </subModelOperations>
                          </firstModelOperation>
                          <variables name="root" documentation="The semantic element of the tree."/>
                          <variables name="element" documentation="The currently edited element."/>
                          <variables name="container" documentation="The semantic element corresponding to the view container."/>
                        </create>
                      </subItemMappings>
                      <delete name="Delete EventSent">
                        <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                      </delete>
                      <create name="Create Copy of">
                        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventSent" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeEventSent()"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="input" valueExpression="service:element.copyEventInput()"/>
                          </subModelOperations>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                        <variables name="container" documentation="The semantic element corresponding to the view container."/>
                      </create>
                      <popupMenus name="Create...">
                        <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Input">
                          <view name="views"/>
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeEventInputs()"/>
                            </firstModelOperations>
                          </initialOperation>
                        </menuItemDescriptions>
                      </popupMenus>
                    </subItemMappings>
                    <delete name="NoDelete" precondition="false">
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                    </delete>
                    <popupMenus name="Create...">
                      <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Operation Event Sent">
                        <view name="views"/>
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventSent" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeEventSent()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </menuItemDescriptions>
                    </popupMenus>
                  </subItemMappings>
                  <subItemMappings name="EventReceivedDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                    <defaultStyle labelExpression="Event Received">
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <subItemMappings name="EventReceivedTree" domainClass="edtimplementation::EventReceived" semanticCandidatesExpression="feature:operations">
                      <defaultStyle>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      </defaultStyle>
                      <subItemMappings name="InputTree" domainClass="edtimplementation::Parameter" semanticCandidatesExpression="[thisEObject.input/]">
                        <defaultStyle labelExpression="aql:'input: '+self.name">
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        </defaultStyle>
                        <create name="Create copy of">
                          <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeEventInputs()"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtimplementation::Parameter).type/]"/>
                            </subModelOperations>
                          </firstModelOperation>
                          <variables name="root" documentation="The semantic element of the tree."/>
                          <variables name="element" documentation="The currently edited element."/>
                          <variables name="container" documentation="The semantic element corresponding to the view container."/>
                        </create>
                      </subItemMappings>
                      <delete name="Delete EventReceived">
                        <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                      </delete>
                      <create name="Create Copy of">
                        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventReceived" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeEventReceived()"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="input" valueExpression="service:element.copyEventInput()"/>
                          </subModelOperations>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                        <variables name="container" documentation="The semantic element corresponding to the view container."/>
                      </create>
                      <popupMenus name="Create...">
                        <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Input">
                          <view name="views"/>
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeEventInputs()"/>
                            </firstModelOperations>
                          </initialOperation>
                        </menuItemDescriptions>
                      </popupMenus>
                    </subItemMappings>
                    <delete name="NoDelete" precondition="false">
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                    </delete>
                    <popupMenus name="Create...">
                      <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Event Received">
                        <view name="views"/>
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventReceived" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeEventReceived()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </menuItemDescriptions>
                    </popupMenus>
                  </subItemMappings>
                  <subItemMappings name="RequestReceivedDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                    <defaultStyle labelExpression="Request Received">
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <subItemMappings name="RequestReceivedTree" domainClass="edtimplementation::RequestReceived" semanticCandidatesExpression="feature:operations">
                      <defaultStyle>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      </defaultStyle>
                      <subItemMappings name="InputTree" domainClass="edtimplementation::Parameter" semanticCandidatesExpression="[thisEObject.input/]">
                        <defaultStyle labelExpression="aql:'input: '+self.name">
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        </defaultStyle>
                        <create name="Create copy of">
                          <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeRequestInputs()"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtimplementation::Parameter).type/]"/>
                            </subModelOperations>
                          </firstModelOperation>
                          <variables name="root" documentation="The semantic element of the tree."/>
                          <variables name="element" documentation="The currently edited element."/>
                          <variables name="container" documentation="The semantic element corresponding to the view container."/>
                        </create>
                      </subItemMappings>
                      <subItemMappings name="OutputTree" domainClass="edtimplementation::Parameter" semanticCandidatesExpression="[thisEObject.output/]">
                        <defaultStyle labelExpression="aql:'output: '+self.name">
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        </defaultStyle>
                        <create name="Create copy of">
                          <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="output">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeRequestOutputs()"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtimplementation::Parameter).type/]"/>
                            </subModelOperations>
                          </firstModelOperation>
                          <variables name="root" documentation="The semantic element of the tree."/>
                          <variables name="element" documentation="The currently edited element."/>
                          <variables name="container" documentation="The semantic element corresponding to the view container."/>
                        </create>
                      </subItemMappings>
                      <delete name="Delete RequestReceived">
                        <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                      </delete>
                      <create name="Create Copy of">
                        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestReceived" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeRequestReceived()"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="input" valueExpression="service:element.copyRequestResponseInput()"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="output" valueExpression="service:element.copyRequestResponseOutput()"/>
                          </subModelOperations>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                        <variables name="container" documentation="The semantic element corresponding to the view container."/>
                      </create>
                      <popupMenus name="Create...">
                        <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Output">
                          <view name="views"/>
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="output">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeRequestOutputs()"/>
                            </firstModelOperations>
                          </initialOperation>
                        </menuItemDescriptions>
                        <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Input">
                          <view name="views"/>
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeRequestInputs()"/>
                            </firstModelOperations>
                          </initialOperation>
                        </menuItemDescriptions>
                      </popupMenus>
                    </subItemMappings>
                    <delete name="NoDelete" precondition="false">
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                    </delete>
                    <popupMenus name="Create...">
                      <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Request Received">
                        <view name="views"/>
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestReceived" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeRequestReceived()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </menuItemDescriptions>
                    </popupMenus>
                  </subItemMappings>
                  <subItemMappings name="RequestSentDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                    <defaultStyle labelExpression="Request Sent">
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <subItemMappings name="RequestSentTree" domainClass="edtimplementation::RequestSent" semanticCandidatesExpression="feature:operations">
                      <defaultStyle>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      </defaultStyle>
                      <subItemMappings name="InputTree" domainClass="edtimplementation::Parameter" semanticCandidatesExpression="[thisEObject.input/]">
                        <defaultStyle labelExpression="aql:'input: '+self.name">
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        </defaultStyle>
                        <create name="Create copy of">
                          <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeRequestInputs()"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtimplementation::Parameter).type/]"/>
                            </subModelOperations>
                          </firstModelOperation>
                          <variables name="root" documentation="The semantic element of the tree."/>
                          <variables name="element" documentation="The currently edited element."/>
                          <variables name="container" documentation="The semantic element corresponding to the view container."/>
                        </create>
                      </subItemMappings>
                      <subItemMappings name="OutputTree" domainClass="edtimplementation::Parameter" semanticCandidatesExpression="[thisEObject.output/]">
                        <defaultStyle labelExpression="aql:'output: '+self.name">
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        </defaultStyle>
                        <create name="Create copy of">
                          <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="output">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeRequestOutputs()"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtimplementation::Parameter).type/]"/>
                            </subModelOperations>
                          </firstModelOperation>
                          <variables name="root" documentation="The semantic element of the tree."/>
                          <variables name="element" documentation="The currently edited element."/>
                          <variables name="container" documentation="The semantic element corresponding to the view container."/>
                        </create>
                      </subItemMappings>
                      <delete name="Delete RequestSent">
                        <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                      </delete>
                      <create name="Create Copy of">
                        <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestSent" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeRequestSent()"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="input" valueExpression="service:element.copyRequestResponseInput()"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="output" valueExpression="service:element.copyRequestResponseOutput()"/>
                          </subModelOperations>
                        </firstModelOperation>
                        <variables name="root" documentation="The semantic element of the tree."/>
                        <variables name="element" documentation="The currently edited element."/>
                        <variables name="container" documentation="The semantic element corresponding to the view container."/>
                      </create>
                      <popupMenus name="Create...">
                        <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Input">
                          <view name="views"/>
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="input">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeRequestInputs()"/>
                            </firstModelOperations>
                          </initialOperation>
                        </menuItemDescriptions>
                        <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Output">
                          <view name="views"/>
                          <initialOperation>
                            <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="output">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeRequestOutputs()"/>
                            </firstModelOperations>
                          </initialOperation>
                        </menuItemDescriptions>
                      </popupMenus>
                    </subItemMappings>
                    <delete name="NoDelete" precondition="false">
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                    </delete>
                    <popupMenus name="Create...">
                      <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Request Sent">
                        <view name="views"/>
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestSent" referenceName="operations">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeRequestSent()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </menuItemDescriptions>
                    </popupMenus>
                  </subItemMappings>
                </subItemMappings>
                <subItemMappings name="PropertiesDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                  <defaultStyle labelExpression="Properties">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <subItemMappings name="PropertiesTree" domainClass="edtimplementation::ModuleTypeProperty" semanticCandidatesExpression="feature:Properties">
                    <defaultStyle>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <create name="Create Copy of">
                      <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleTypeProperty" referenceName="Properties">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypeProperty()"/>
                        </subModelOperations>
                      </firstModelOperation>
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                      <variables name="container" documentation="The semantic element corresponding to the view container."/>
                    </create>
                  </subItemMappings>
                  <delete name="NoDelete" precondition="false">
                    <variables name="root" documentation="The semantic element of the tree."/>
                    <variables name="element" documentation="The currently edited element."/>
                  </delete>
                  <popupMenus name="Create...">
                    <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Module Type Property">
                      <view name="views"/>
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleTypeProperty" referenceName="Properties">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypeProperty()"/>
                        </firstModelOperations>
                      </initialOperation>
                    </menuItemDescriptions>
                  </popupMenus>
                </subItemMappings>
                <subItemMappings name="PinfoDescription" domainClass="edtimplementation::ModuleType" semanticCandidatesExpression="[self/]">
                  <defaultStyle labelExpression="Pinfo">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <subItemMappings name="PublicPinfoTree" domainClass="edtimplementation::PublicPinfo" semanticCandidatesExpression="[thisEObject.pinfo/]">
                    <defaultStyle>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <create name="Create Copy of">
                      <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::PublicPinfo" referenceName="pinfo">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypePublicPinfo()"/>
                        </subModelOperations>
                      </firstModelOperation>
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                      <variables name="container" documentation="The semantic element corresponding to the view container."/>
                    </create>
                  </subItemMappings>
                  <subItemMappings name="PrivatePinfoTree" domainClass="edtimplementation::PrivatePinfo" semanticCandidatesExpression="[thisEObject.pinfo/]">
                    <defaultStyle>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                    <create name="Create Copy of">
                      <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::PrivatePinfo" referenceName="pinfo">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleTypePrivatePinfo()"/>
                        </subModelOperations>
                      </firstModelOperation>
                      <variables name="root" documentation="The semantic element of the tree."/>
                      <variables name="element" documentation="The currently edited element."/>
                      <variables name="container" documentation="The semantic element corresponding to the view container."/>
                    </create>
                  </subItemMappings>
                  <delete name="NoDelete" precondition="false">
                    <variables name="root" documentation="The semantic element of the tree."/>
                    <variables name="element" documentation="The currently edited element."/>
                  </delete>
                  <popupMenus name="Create...">
                    <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Public Pinfo">
                      <view name="views"/>
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::PublicPinfo" referenceName="pinfo">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypePublicPinfo()"/>
                        </firstModelOperations>
                      </initialOperation>
                    </menuItemDescriptions>
                    <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Private Pinfo">
                      <view name="views"/>
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::PrivatePinfo" referenceName="pinfo">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypePrivatePinfo()"/>
                        </firstModelOperations>
                      </initialOperation>
                    </menuItemDescriptions>
                  </popupMenus>
                </subItemMappings>
                <delete name="Delete ModuleType">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleType" referenceName="ModuleTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleType()"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Module Type">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleType" referenceName="ModuleTypes">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleTypes()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="ModuleImplementationDescription" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="ModuleImplementations">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ModuleImplementationsTree" domainClass="edtimplementation::ModuleImplementation" semanticCandidatesExpression="feature:moduleImplementations">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete ModuleImplementation">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleImplementation" referenceName="moduleImplementations">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleImplementation()"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Module Implementation">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleImplementation" referenceName="moduleImplementations">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleImplementations()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="ModuleInstanceDescription" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="ModuleInstances">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ModuleInstanceTree" domainClass="edtimplementation::ModuleInstance" semanticCandidatesExpression="feature:instances">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="PropertiesValueDescription" domainClass="edtimplementation::ModuleInstance" semanticCandidatesExpression="[self/]">
                  <defaultStyle labelExpression="PropertiesValues">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <subItemMappings name="PropertiesValueTree" domainClass="edtimplementation::PropertyValue" semanticCandidatesExpression="[thisEObject.propertyValues/]">
                    <defaultStyle>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                  </subItemMappings>
                </subItemMappings>
                <subItemMappings name="PinfoDescription" domainClass="edtimplementation::ModuleInstance" semanticCandidatesExpression="[self/]">
                  <defaultStyle labelExpression="Pinfo">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <subItemMappings name="PINFOPublicTree" domainClass="edtimplementation::PublicPinfoValue" semanticCandidatesExpression="[thisEObject.pinfo/]">
                    <defaultStyle>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                  </subItemMappings>
                  <subItemMappings name="PINFOPrivateTree" domainClass="edtimplementation::PrivatePinfoValue" semanticCandidatesExpression="[thisEObject.pinfo/]">
                    <defaultStyle>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    </defaultStyle>
                  </subItemMappings>
                </subItemMappings>
                <delete name="Delete ModuleInstance">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleInstance" referenceName="instances">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfModuleInstance()"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="ImplementationGraph">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInComponentImplementationView()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Module Instance">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ModuleInstance" referenceName="instances">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countModuleInstances()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="TriggerInstanceDescription" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="TriggerInstances">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="TriggerInstanceTree" domainClass="edtimplementation::TriggerInstance" semanticCandidatesExpression="feature:instances">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete TriggerInstance">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::TriggerInstance" referenceName="instances">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.copyTriggerInstanceAndRename(instance)"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="ImplementationGraph">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInComponentImplementationView()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Trigger Instance">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::TriggerInstance" referenceName="instances">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:self.countAndSetOperationOfTriggerInstance()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="DynamicTriggerInstanceDescription" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="DynamicTriggerInstances">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="DynamicTriggerInstanceTree" domainClass="edtimplementation::DynamicTriggerInstance" semanticCandidatesExpression="feature:instances">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="ParameterTree" domainClass="edtimplementation::Parameter" semanticCandidatesExpression="[thisEObject.parameter/]">
                  <defaultStyle labelExpression="['Parameter '+self.name/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                </subItemMappings>
                <delete name="Delete DynamicTriggerInstance">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DynamicTriggerInstance" referenceName="instances">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.copyDynamicTriggerInstanceAndRename(instance)"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
                <popupMenus name="Create...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Parameter">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::Parameter" referenceName="parameter">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:instance.countDTriggerParameter()"/>
                      </firstModelOperations>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="ImplementationGraph">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInComponentImplementationView()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Dynamic Trigger Instance">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DynamicTriggerInstance" referenceName="instances">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:self.countAndSetOperationOfDynamicTriggerInstance()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="ExternalOperation(s)Description" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="ExternalOperations">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ExternalOperationTree" domainClass="edtimplementation::ExternalSenderOperation" semanticCandidatesExpression="feature:ExternalSenders">
                <defaultStyle labelExpression="[name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete ExternalSenderOperation">
                  <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoServiceOrOperationLink()">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ExternalSenderOperation" referenceName="ExternalSenders">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.setNameToCopyOfExternal()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="language" valueExpression="[element.oclAsType(edtimplementation::ExternalSenderOperation).language/]"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="ImplementationGraph">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInComponentImplementationView()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New External Operation">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ExternalSenderOperation" referenceName="ExternalSenders">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countExternal()"/>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="Delete ComponentImplementation">
              <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:deleteComponentImplementation()"/>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperation>
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='Service(s)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='Reference(s)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='ModuleTypesDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='ModuleImplementationDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='ModuleInstanceDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='TriggerInstanceDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='DynamicTriggerInstanceDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
              <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='ComponentImplementation']/@subItemMappings[name='ExternalOperation(s)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
            </popupMenus>
            <popupMenus name="Find in...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="ImplementationGraph">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInComponentImplementationView()"/>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="ServiceInstanceQos(s)" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Service QoS">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="ServiceQoSTree" domainClass="edtqos::ServiceInstanceQos" semanticCandidatesExpression="feature:AssociatedServiceQos" reusedTreeItemMappings="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentDefinition']/@subItemMappings[name='ComponentTypeFolderDescription']/@subItemMappings[name='ServiceInstanceQos(s)Description']/@subItemMappings[name='ServiceQoSTree']/@subItemMappings[name='DataQoSDescription'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentDefinition']/@subItemMappings[name='ComponentTypeFolderDescription']/@subItemMappings[name='ServiceInstanceQos(s)Description']/@subItemMappings[name='ServiceQoSTree']/@subItemMappings[name='EventQoSDescription'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentDefinition']/@subItemMappings[name='ComponentTypeFolderDescription']/@subItemMappings[name='ServiceInstanceQos(s)Description']/@subItemMappings[name='ServiceQoSTree']/@subItemMappings[name='RequestResponseQoSDescription']">
              <defaultStyle labelExpression="[Name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete Service QoS">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New ServiceQoS">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtqos::ServiceInstanceQos" referenceName="AssociatedServiceQos">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:countServiceQoS()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="BinDesc" domainClass="edtimplementation::ComponentImplementation" semanticCandidatesExpression="var:self">
            <defaultStyle labelExpression="Binary Description(s)">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="BinDescTree" domainClass="edtbin::BinDesc" semanticCandidatesExpression="feature:binDesc">
              <defaultStyle labelExpression="feature:fileName">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="BinModuleTree" domainClass="edtbin::BinaryModule" semanticCandidatesExpression="feature:binaryModules">
                <defaultStyle labelExpression="['Binary Module: Reference: '+thisEObject.reference.name+' / Object: '+thisEObject.object/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="BinDependencyTree" domainClass="_2::BinaryDependency" semanticCandidatesExpression="feature:binaryDependencies">
                  <defaultStyle labelExpression="['Binary Dependency: Object: '+thisEObject.object/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <create name="Create Copy of">
                    <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="_2::BinaryDependency" referenceName="binaryDependencies">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="checksum" valueExpression="[element.oclAsType(_2::BinaryDependency).checksum/]"/>
                      </subModelOperations>
                    </firstModelOperation>
                    <variables name="root" documentation="The semantic element of the tree."/>
                    <variables name="element" documentation="The currently edited element."/>
                    <variables name="container" documentation="The semantic element corresponding to the view container."/>
                  </create>
                </subItemMappings>
                <create name="Create Copy of">
                  <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtbin::BinaryModule" referenceName="binaryModules">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="checksum" valueExpression="[element.oclAsType(edtbin::BinaryModule).checksum/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="heapSize" valueExpression="[element.oclAsType(edtbin::BinaryModule).heapSize/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="stackSize" valueExpression="[element.oclAsType(edtbin::BinaryModule).stackSize/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="userContextSize" valueExpression="[element.oclAsType(edtbin::BinaryModule).userContextSize/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="warmStartContextSize" valueExpression="[element.oclAsType(edtbin::BinaryModule).warmStartContextSize/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="binaryDependencies" valueExpression="service:element.copyBinaryModuleDependencies()"/>
                    </subModelOperations>
                  </firstModelOperation>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                  <variables name="container" documentation="The semantic element corresponding to the view container."/>
                </create>
                <popupMenus name="Create...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Binary Dependency">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="_2::BinaryDependency" referenceName="binaryDependencies"/>
                      </firstModelOperations>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtbin::BinDesc" referenceName="binDesc">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="fileName" valueExpression="service:element.copyAndRenameBinDesc(instance)"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Binary Module">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtbin::BinaryModule" referenceName="binaryModules"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Binary Description">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtbin::BinDesc" referenceName="binDesc">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="fileName" valueExpression="service:countBinDesc()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="Delete ComponentImplementation">
            <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:deleteComponentImplementation()"/>
              <subModelOperations xsi:type="tool_1:RemoveElement"/>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <create name="Create Copy of">
            <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
              <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ComponentImplementation" referenceName="ComponentImplementations">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="componentDefinition" valueExpression="[element.oclAsType(edtimplementation::ComponentImplementation).componentDefinition/]"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.copyAndRenameComponentImplementation(instance)"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="usedLibraries" valueExpression="[element.oclAsType(edtimplementation::ComponentImplementation).usedLibraries/]"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="AssociatedServiceQos" valueExpression="service:element.copyComponentImplementationAssociatedQoS()"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="references" valueExpression="service:element.copyComponentImplementationReferences(instance)"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="services" valueExpression="service:element.copyComponentImplementationServices(instance)"/>
              </subModelOperations>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
            <variables name="container" documentation="The semantic element corresponding to the view container."/>
          </create>
          <popupMenus name="Create...">
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentDefinition']/@subItemMappings[name='ComponentTypeFolderDescription']/@subItemMappings[name='ServiceInstanceQos(s)Description']/@popupMenus.0/@menuItemDescriptions.0"/>
            <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='ComponentImplementations']/@subItemMappings[name='ComponentImplementationFolderDescription']/@subItemMappings[name='BinDesc']/@popupMenus.0/@menuItemDescriptions.0"/>
          </popupMenus>
          <popupMenus name="Find in...">
            <menuItemDescriptions xsi:type="tool_1:OperationAction" name="ImplementationGraph">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInComponentImplementationView()"/>
              </initialOperation>
            </menuItemDescriptions>
          </popupMenus>
        </subItemMappings>
        <delete name="NoDelete" precondition="false">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
        </delete>
        <popupMenus name="Create...">
          <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Component Implementation">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::ComponentImplementation" referenceName="ComponentImplementations">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countComponentImplementation()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </menuItemDescriptions>
        </popupMenus>
      </subItemMappings>
      <subItemMappings name="Integration" domainClass="edtproject.Step5" semanticCandidatesExpression="feature:Step">
        <defaultStyle labelExpression="feature:FolderName">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <subItemMappings name="Composite" domainClass="edtproject::FinalAssembly" preconditionExpression="service:implementationSetInComponent()" semanticCandidatesExpression="feature:FinalAssembly">
          <defaultStyle labelExpression="['Final Assembly: '+Name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="Component" domainClass="edtproject.Component" semanticCandidatesExpression="[self.FinalAssembly.Components/]">
            <defaultStyle labelExpression="['Component: '+ Name/]">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="Service(s)Description" domainClass="edtproject.Component" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Service(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ServiceTree" domainClass="edtproject.ComponentService" semanticCandidatesExpression="feature:ComponentServices">
                <defaultStyle labelExpression="[Name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <subItemMappings name="Reference(s)Description" domainClass="edtproject.Component" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Reference(s)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ReferenceTree" domainClass="edtproject.ComponentReference" semanticCandidatesExpression="feature:ComponentReferences">
                <defaultStyle labelExpression="[Name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <subItemMappings name="Property(ies)Description" domainClass="edtproject.Component" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="Property(ies)">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ReferenceTree" domainClass="edtproject.ComponentProperty" semanticCandidatesExpression="feature:Properties">
                <defaultStyle labelExpression="[Name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
          </subItemMappings>
          <subItemMappings name="Property(ies)Description" domainClass="edtproject.Composite" semanticCandidatesExpression="feature:FinalAssembly">
            <defaultStyle labelExpression="Properties">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="PropertyTree" domainClass="edtproject.Property" semanticCandidatesExpression="feature:Properties">
              <defaultStyle labelExpression="[name/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete CompositeProperty">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::Property" referenceName="Properties">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['copy_of_'+element.oclAsType(edtproject::Property).name/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[element.oclAsType(edtproject::Property).type/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="mustSupply" valueExpression="[element.oclAsType(edtproject::Property).mustSupply/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Value" valueExpression="[element.oclAsType(edtproject::Property).Value/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ECOASCAType" valueExpression="[element.oclAsType(edtproject::Property).ECOASCAType/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ECOASCALibrary" valueExpression="[element.oclAsType(edtproject::Property).ECOASCALibrary/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Composite Property">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtproject::Property" referenceName="Properties">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:countComponentDefinitionOrCompositeProperties()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="xsd:string"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="NoDelete" precondition="false">
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <popupMenus name="Open">
            <menuItemDescriptions xsi:type="tool_1:OperationAction" name="Assembly Graphical View">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[thisEObject.oclAsType(edtproject::FinalAssembly).FinalAssembly/]">
                  <subModelOperations xsi:type="tool:Navigation" diagramDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='CompositeDiagram']"/>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescriptions>
          </popupMenus>
        </subItemMappings>
        <subItemMappings name="LogicalTree" domainClass="edtlogical::LogicalSystem" semanticCandidatesExpression="[thisEObject.LogicalSystem/]">
          <defaultStyle labelExpression="['Logical System: '+id/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="PlatformLinkDescription" domainClass="edtlogical::LogicalSystem" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="LogicalComputingPlatformLinks">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="PlatformLinkTree" domainClass="edtlogical::LogicalComputingPlatformLink" semanticCandidatesExpression="[thisEObject.logicalComputingPlatformLinks/]">
              <defaultStyle labelExpression="feature:id">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <delete name="Delete LogicalComputingPlatformLink" precondition="true">
                <firstModelOperation xsi:type="tool_1:RemoveElement"/>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Find in...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="LogicalSystem">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInLogicalDeploymentView()"/>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Logical Computing Platform Link">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalComputingPlatformLink" referenceName="logicalComputingPlatformLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:instance.countLogicalSystemElements()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="PlatformTree" domainClass="edtlogical::LogicalComputingPlatform" semanticCandidatesExpression="[thisEObject.logicalComputingPlatforms/]">
            <defaultStyle labelExpression="aql:'LogicalComputingPlatform: '+self.id">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="NodeTree" domainClass="edtlogical::LogicalComputingNode" semanticCandidatesExpression="[logicalComputingNodes/]">
              <defaultStyle labelExpression="aql:'LogicalComputingNode: '+self.id">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="LogicalProcessorTree" domainClass="edtlogical::LogicalProcessor" semanticCandidatesExpression="feature:logicalProcessors">
                <defaultStyle labelExpression="aql:'LogicalProcessor Type:'+self.type+' StepDuration:'+self.StepDurationNanoSeconds">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete LogicalProcessor" precondition="true">
                  <firstModelOperation xsi:type="tool_1:RemoveElement"/>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
              </subItemMappings>
              <delete name="Delete LogicalComputingNode">
                <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalComputingNode" referenceName="logicalComputingNodes">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:element.copyAndRenameLogicalNode(instance)"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Logical Processor">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalProcessor" referenceName="logicalProcessors"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
              <popupMenus name="Find in...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="LogicalSystem">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInLogicalDeploymentView()"/>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <subItemMappings name="NodeLinkDescription" domainClass="edtlogical::LogicalComputingPlatform" semanticCandidatesExpression="[self/]">
              <defaultStyle labelExpression="LogicalComputingNodeLinks">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="NodeLinkTree" domainClass="edtlogical::LogicalComputingNodeLink" semanticCandidatesExpression="[thisEObject.logicalComputingNodeLinks/]">
                <defaultStyle labelExpression="['from:'+self.from.id+' to:'+self.to.id/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <delete name="Delete LogicalComputingNodeLink" precondition="true">
                  <firstModelOperation xsi:type="tool_1:RemoveElement"/>
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <popupMenus name="Find in...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="LogicalSystem">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInLogicalDeploymentView()"/>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="NoDelete" precondition="false">
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Logical Computing Node Link">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalComputingNodeLink" referenceName="logicalComputingNodeLinks"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="Delete LogicalComputingPlatform">
              <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperation>
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <create name="Create Copy of">
              <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalComputingPlatform" referenceName="logicalComputingPlatforms">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:element.copyAndRenameLogicalPlatform(instance)"/>
                </subModelOperations>
              </firstModelOperation>
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
            </create>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Logical Computing Node">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalComputingNode" referenceName="logicalComputingNodes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:instance.countLogicalSystemElements()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
            <popupMenus name="Find in...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="LogicalSystem">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInLogicalDeploymentView()"/>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="Delete LogicalSystem">
            <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
              <subModelOperations xsi:type="tool_1:RemoveElement"/>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <popupMenus name="Create...">
            <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Logical Computing Platform">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalComputingPlatform" referenceName="logicalComputingPlatforms">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="service:instance.countLogicalSystemElements()"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescriptions>
          </popupMenus>
        </subItemMappings>
        <subItemMappings name="DeploymentTree" domainClass="edtdeployment::Deployment" semanticCandidatesExpression="[thisEObject.Deployment/]">
          <defaultStyle labelExpression="['Deployment Schema: '+Name/]">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="ProtectionDomainDescription" domainClass="edtdeployment::Deployment" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Protection Domains">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="ProtectionDomainTree" domainClass="edtdeployment::ProtectionDomain" semanticCandidatesExpression="feature:protectionDomains">
              <defaultStyle>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="DeployedModuleInstanceDescription" domainClass="edtdeployment::ProtectionDomain" semanticCandidatesExpression="[self/]">
                <defaultStyle labelExpression="Deployed Module Instances">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="DeployedModuleInstanceTree" domainClass="edtdeployment::DeployedModuleInstance" semanticCandidatesExpression="feature:deployedModuleInstances">
                  <defaultStyle labelExpression="['Component:'+self.Component.Name+' ModuleInstance:'+self.ModuleInstance.name/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <popupMenus name="Find in...">
                    <menuItemDescriptions xsi:type="tool_1:OperationAction" name="LogicalSystem">
                      <view name="views"/>
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInLogicalDeploymentView()"/>
                      </initialOperation>
                    </menuItemDescriptions>
                  </popupMenus>
                </subItemMappings>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <popupMenus name="Create...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Deployed Module Instance">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::DeployedModuleInstance" referenceName="deployedModuleInstances"/>
                      </firstModelOperations>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <subItemMappings name="DeployedTriggerInstanceDescription" domainClass="edtdeployment::ProtectionDomain" semanticCandidatesExpression="[self/]">
                <defaultStyle labelExpression="Deployed Trigger Instances">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="DeployedTriggerInstanceTree" domainClass="edtdeployment::DeployedTriggerInstance" semanticCandidatesExpression="feature:deployedTriggerInstances">
                  <defaultStyle labelExpression="['Component:'+self.Component.Name+' TriggerInstance:'+self.TriggerInstance.name/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                  <popupMenus name="Find in...">
                    <menuItemDescriptions xsi:type="tool_1:OperationAction" name="LogicalSystem">
                      <view name="views"/>
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInLogicalDeploymentView()"/>
                      </initialOperation>
                    </menuItemDescriptions>
                  </popupMenus>
                </subItemMappings>
                <delete name="NoDelete" precondition="false">
                  <variables name="root" documentation="The semantic element of the tree."/>
                  <variables name="element" documentation="The currently edited element."/>
                </delete>
                <popupMenus name="Create...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Deployed Trigger Instance">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::DeployedTriggerInstance" referenceName="deployedTriggerInstances"/>
                      </firstModelOperations>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <delete name="Delete ProtectionDomain">
                <firstModelOperation xsi:type="tool_1:RemoveElement"/>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
              </delete>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Deployed Module Instance">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::DeployedModuleInstance" referenceName="deployedModuleInstances"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Deployed Trigger Instance">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::DeployedTriggerInstance" referenceName="deployedTriggerInstances"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
              <popupMenus name="Find in...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="LogicalSystem">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInLogicalDeploymentView()"/>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Protection Domain">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::ProtectionDomain" referenceName="protectionDomains">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:instance.countDeploymentElements()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="LogPolicyDescription" domainClass="edtdeployment::Deployment" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Log Policies">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="LogPolicyTree" domainClass="edtdeployment::LogPolicy" semanticCandidatesExpression="feature:logPolicies">
              <defaultStyle labelExpression="LogPolicy">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="ComponentLog" domainClass="edtdeployment::ComponentLog" semanticCandidatesExpression="feature:componentLogs">
                <defaultStyle labelExpression="['ComponentLog: '+self.ComponentInstance.Name/]">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="ModuleLog" domainClass="edtdeployment::ModuleLog" semanticCandidatesExpression="feature:moduleLogs">
                  <defaultStyle labelExpression="['ModuleLog: '+self.ModuleInstance.name/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                </subItemMappings>
                <popupMenus name="Create...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Module Log">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::ModuleLog" referenceName="moduleLogs"/>
                      </firstModelOperations>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <popupMenus name="Create...">
                <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Component Log">
                  <view name="views"/>
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::ComponentLog" referenceName="componentLogs"/>
                    </firstModelOperations>
                  </initialOperation>
                </menuItemDescriptions>
              </popupMenus>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Log Policy">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::LogPolicy" referenceName="logPolicies"/>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="PlatformConfigurationDescription" domainClass="edtdeployment::Deployment" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Platform Configurations">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="PlatformConfigurationTree" domainClass="edtdeployment::PlatformConfiguration" semanticCandidatesExpression="feature:platformConfigurations">
              <defaultStyle labelExpression="['PlatformConfiguration for: '+self.computingPlatform.id/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <subItemMappings name="PlatformMessagesDescription" domainClass="edtdeployment::PlatformConfiguration" semanticCandidatesExpression="[self/]">
                <defaultStyle labelExpression="Platform Messages">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="PlatformMessagesTree" domainClass="edtdeployment::PlatformMessage" semanticCandidatesExpression="feature:platformMessages">
                  <defaultStyle labelExpression="['Mapped On Link Id: '+self.mappedOnLinkId.id/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                </subItemMappings>
                <popupMenus name="Create...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Platform Message">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::PlatformMessage" referenceName="platformMessages"/>
                      </firstModelOperations>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
              <subItemMappings name="ComputingNodeConfigurationDescription" domainClass="edtdeployment::PlatformConfiguration" semanticCandidatesExpression="[self/]">
                <defaultStyle labelExpression="Computing Node Configuration">
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                </defaultStyle>
                <subItemMappings name="ComputingNodeConfigurationTree" domainClass="edtdeployment::ComputingNodeConfiguration" semanticCandidatesExpression="feature:computingNodeConfigurations">
                  <defaultStyle labelExpression="['Computing Node: '+self.computingNode.id/]">
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  </defaultStyle>
                </subItemMappings>
                <popupMenus name="Create...">
                  <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Computing Node Configuration">
                    <view name="views"/>
                    <initialOperation>
                      <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::ComputingNodeConfiguration" referenceName="computingNodeConfigurations"/>
                      </firstModelOperations>
                    </initialOperation>
                  </menuItemDescriptions>
                </popupMenus>
              </subItemMappings>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Platform Configuration">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::PlatformConfiguration" referenceName="platformConfigurations"/>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <subItemMappings name="WireMappingDescription" domainClass="edtdeployment::Deployment" semanticCandidatesExpression="[self/]">
            <defaultStyle labelExpression="Wire Mappings">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="WireMappingTree" domainClass="edtdeployment::WireMapping" semanticCandidatesExpression="feature:wireMappings">
              <defaultStyle labelExpression="['Source: '+self.source.Name+' target: '+self.target.Name + ' MappedOnLinkId: '+self.mappedOnLinkId.id/]">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
            </subItemMappings>
            <delete name="NoDelete" precondition="false">
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
            </delete>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Wire Mapping">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::WireMapping" referenceName="wireMappings"/>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="Delete Deployment">
            <firstModelOperation xsi:type="tool_1:If" conditionExpression="service:hasNoCrossReferences()">
              <subModelOperations xsi:type="tool_1:RemoveElement"/>
            </firstModelOperation>
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <popupMenus name="Open">
            <menuItemDescriptions xsi:type="tool_1:OperationAction" name="Logical System And Deployment Schema Graphical View">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[thisEObject.eContainer().oclAsType(edtproject::Step5).LogicalSystem/]">
                  <subModelOperations xsi:type="tool:Navigation" diagramDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']"/>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescriptions>
          </popupMenus>
        </subItemMappings>
        <subItemMappings name="UDPBindingsDescription" domainClass="edtproject::Step5" semanticCandidatesExpression="[self/]">
          <defaultStyle labelExpression="UDP Bindings">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="UDPBindingTree" domainClass="edtudp::UDPBinding" semanticCandidatesExpression="feature:UDPBindings">
            <defaultStyle labelExpression="feature:Name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="PlatformsTree" domainClass="_2::PlatformType" semanticCandidatesExpression="feature:platform">
              <defaultStyle labelExpression="aql:'Platform: '+self.name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="_2::PlatformType" referenceName="platform">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:element.copyAndRenameUDPBindingPlatform(instance)"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <create name="Create Copy of">
              <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtudp::UDPBinding" referenceName="UDPBindings">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.copyAndRenameUDPBinding(instance)"/>
                </subModelOperations>
              </firstModelOperation>
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
            </create>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Platform">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="_2::PlatformType" referenceName="platform">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:instance.countUDPBindingElements()"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="NoDelete" precondition="false">
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <popupMenus name="Create...">
            <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New UDP Binding">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtudp::UDPBinding" referenceName="UDPBindings">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:instance.countUDPBindingElements()"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescriptions>
          </popupMenus>
        </subItemMappings>
        <subItemMappings name="IDMapsDescription" domainClass="edtproject::Step5" semanticCandidatesExpression="[self/]">
          <defaultStyle labelExpression="Association between IDs and wires">
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </defaultStyle>
          <subItemMappings name="IDMapsTree" domainClass="edtuid::IDMap" semanticCandidatesExpression="feature:IDS">
            <defaultStyle labelExpression="feature:Name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </defaultStyle>
            <subItemMappings name="IDsTree" domainClass="edtuid::ID" semanticCandidatesExpression="feature:IDs">
              <defaultStyle labelExpression="aql:'ID: '+self.getIDKey()">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              </defaultStyle>
              <create name="Create Copy of">
                <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtuid::ID" referenceName="IDs">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="value" valueExpression="[element.oclAsType(edtuid::ID).value/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ServiceLink" valueExpression="[element.oclAsType(edtuid::ID).ServiceLink/]"/>
                  </subModelOperations>
                </firstModelOperation>
                <variables name="root" documentation="The semantic element of the tree."/>
                <variables name="element" documentation="The currently edited element."/>
                <variables name="container" documentation="The semantic element corresponding to the view container."/>
              </create>
            </subItemMappings>
            <create name="Create Copy of">
              <firstModelOperation xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtuid::IDMap" referenceName="IDS">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:element.copyAndRenameIDMap(instance)"/>
                </subModelOperations>
              </firstModelOperation>
              <variables name="root" documentation="The semantic element of the tree."/>
              <variables name="element" documentation="The currently edited element."/>
              <variables name="container" documentation="The semantic element corresponding to the view container."/>
            </create>
            <popupMenus name="Create...">
              <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New ID">
                <view name="views"/>
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtuid::ID" referenceName="IDs"/>
                  </firstModelOperations>
                </initialOperation>
              </menuItemDescriptions>
            </popupMenus>
          </subItemMappings>
          <delete name="NoDelete" precondition="false">
            <variables name="root" documentation="The semantic element of the tree."/>
            <variables name="element" documentation="The currently edited element."/>
          </delete>
          <popupMenus name="Create...">
            <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New ID Map">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtuid::IDMap" referenceName="IDS">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="service:instance.countIDMapElements()"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescriptions>
          </popupMenus>
        </subItemMappings>
        <delete name="NoDelete" precondition="false">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
        </delete>
        <popupMenus name="Create...">
          <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Deployment Schema" precondition="[thisEObject. oclAsType(edtproject::Step5).Deployment.oclIsUndefined()/]">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtdeployment::Deployment" referenceName="Deployment">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="Name" valueExpression="Deployment"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </menuItemDescriptions>
          <menuItemDescriptions xsi:type="tool_1:OperationAction" name="New Logical System" precondition="[thisEObject. oclAsType(edtproject::Step5).LogicalSystem.oclIsUndefined()/]">
            <view name="views"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtlogical::LogicalSystem" referenceName="LogicalSystem">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="FileNamePrefix" valueExpression="LogicalSystem"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="id" valueExpression="LogicalSystem"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </menuItemDescriptions>
          <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Integration']/@subItemMappings[name='IDMapsDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
          <menuItemDescriptions xsi:type="tool_1:MenuItemDescriptionReference" item="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ProjectTree']/@subItemMappings[name='Integration']/@subItemMappings[name='UDPBindingsDescription']/@popupMenus.0/@menuItemDescriptions.0"/>
        </popupMenus>
      </subItemMappings>
      <subItemMappings name="OutputDirectory" domainClass="edtproject::OutputDirectory" semanticCandidatesExpression="feature:OutputDirectory">
        <defaultStyle labelExpression="['Project Output Directory: '+name/]">
          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
        </defaultStyle>
        <delete name="NoDelete" precondition="false">
          <variables name="root" documentation="The semantic element of the tree."/>
          <variables name="element" documentation="The currently edited element."/>
        </delete>
      </subItemMappings>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="ComponentImplementationDiagram" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" domainClass="edtimplementation::ComponentImplementation" enablePopupBars="true">
      <metamodel href="../../com.dassault.ecoa.model/model/deployment.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTImplementation.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTProject2.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTQos.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTServices.ecore#/"/>
      <metamodel href="../../com.dassault.edt.model/model/EDTTypes.ecore#/"/>
      <metamodel href="../../plugins/com.dassault.edt.model/model/EDTImplementation.ecore#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.layered" label="ELK Layered" description="Layer-based algorithm provided by the Eclipse Layout Kernel. Arranges as many edges as possible into one direction by placing nodes into subsequent layers. This implementation supports different routing styles (straight, orthogonal, splines); if orthogonal routing is selected, arbitrary port constraints are respected, thus enabling the layout of block diagrams such as actor-oriented models or circuit schematics. Furthermore, full layout of compound graphs with cross-hierarchy edges is supported when the respective option is activated on the top level.">
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.edgeRouting">
          <targets>PARENT</targets>
          <value name="ORTHOGONAL"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:BooleanLayoutOption" id="org.eclipse.elk.layered.mergeEdges" value="true">
          <targets>PARENT</targets>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.networkSimplex.nodeFlexibility.default">
          <targets>PARENT</targets>
          <value name="PORT_POSITION"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumSetLayoutOption" id="org.eclipse.elk.nodeSize.constraints">
          <targets>NODE</targets>
          <values name="MINIMUM_SIZE"/>
          <values name="PORTS"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.edgeRouting.splines.mode">
          <targets>PARENT</targets>
          <value name="CONSERVATIVE_SOFT"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.layered.nodePlacement.bk.fixedAlignment">
          <targets>PARENT</targets>
          <value name="BALANCED"/>
        </layoutOptions>
        <layoutOptions xsi:type="description_1:EnumLayoutOption" id="org.eclipse.elk.hierarchyHandling">
          <targets>NODE</targets>
          <targets>PARENT</targets>
          <value name="SEPARATE_CHILDREN"/>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <edgeMappings name="DataLinkService" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesData']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesData'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance']" targetFinderExpression="[self.reader/]" sourceFinderExpression="[self.writer/]" domainClass="edtimplementation::DataLinkToServiceOperation" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.writer.isDataLinkCorrect(self.reader)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="DataLinkActivatableFifo" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesData']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance']" targetFinderExpression="[self.reader/]" sourceFinderExpression="[self.writer/]" domainClass="edtimplementation::DataLinkActivatableFifo" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.dataLinkControlledWithoutError(self.writer, self.reader)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.dataLinkUnControlledWithoutError(self.writer, self.reader)">
            <style lineStyle="dash" sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EventLinkActivatableFifo" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='External']/@borderedNodeMappings[name='OperationsExternal'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='External']/@borderedNodeMappings[name='OperationsExternal'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetFinderExpression="[self.receiver/]" sourceFinderExpression="[self.sender/]" domainClass="edtimplementation::EventLinkActivatableFifo" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.sender.isEventLinkCorrect(self.receiver)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription labelSize="12">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EventLinkActivatingFifo" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='External']/@borderedNodeMappings[name='OperationsExternal'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='External']/@borderedNodeMappings[name='OperationsExternal'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetFinderExpression="[self.receiver/]" sourceFinderExpression="[self.sender/]" domainClass="edtimplementation::EventLinkActivatingFifo" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.sender.isEventLinkCorrect(self.receiver)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EventLinkToDefinitionOperation" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetFinderExpression="[self.receiver/]" sourceFinderExpression="[self.sender/]" domainClass="edtimplementation::EventLinkToDefinitionOperation" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.sender.isEventLinkCorrect(self.receiver)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EventLinkActivatableFifoFromTrigger" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='TriggerInstance']/@borderedNodeMappings[name='OperationsTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='TriggerInstance']/@borderedNodeMappings[name='OperationsTriggerInstance']" targetFinderExpression="[self.receiver/]" sourceFinderExpression="[self.sender/]" domainClass="edtimplementation::EventLinkActivatableFifoFromTrigger" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.sender.isEventLinkCorrect(self.receiver)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EventLinkActivatingFifoFromTrigger" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='TriggerInstance']/@borderedNodeMappings[name='OperationsTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='DynamicTriggerInstance']/@borderedNodeMappings[name='OperationsDynamicTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='TriggerInstance']/@borderedNodeMappings[name='OperationsTriggerInstance']" targetFinderExpression="[self.receiver/]" sourceFinderExpression="[self.sender/]" domainClass="edtimplementation::EventLinkActivatingFifoFromTrigger" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.sender.isEventLinkCorrect(self.receiver)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="EventLinkToDefinitionOperationFromTrigger" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='TriggerInstance']/@borderedNodeMappings[name='OperationsTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesEvent'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='TriggerInstance']/@borderedNodeMappings[name='OperationsTriggerInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesEvent']" targetFinderExpression="[self.receiver/]" sourceFinderExpression="[self.sender/]" domainClass="edtimplementation::EventLinkToDefinitionOperationFromTrigger" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.sender.isEventLinkCorrect(self.receiver)">
            <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="RequestLinkFromServiceToRequestReceived" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesRequest']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance']" targetFinderExpression="[self.server/]" sourceFinderExpression="[self.client/]" domainClass="edtimplementation::RequestLinkActivatableFifo" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.client.isRequestLinkCorrect(self.server)">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="RequestLinkFromRequestSentToRef" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesRequest']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='References']/@borderedNodeMappings[name='OperationsReferencesRequest']" targetFinderExpression="[self.server/]" sourceFinderExpression="[self.client/]" domainClass="edtimplementation::RequestLinkActivatingToReferenceOperation" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.client.isRequestLinkCorrect(self.server)">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="RequestLinkFromRequestSentToRequestReceived" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" semanticCandidatesExpression="feature:OperationLinks" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesRequest']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@subContainerMappings[name='ModuleInstance']/@borderedNodeMappings[name='OperationsModuleInstance'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@containerMappings[name='ComponentImplementation']/@borderedNodeMappings[name='Services']/@borderedNodeMappings[name='OperationsServicesRequest']" targetFinderExpression="[self.server/]" sourceFinderExpression="[self.client/]" domainClass="edtimplementation::RequestLinkActivatingActivatableFifo" useDomainElement="true">
          <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.client.isRequestLinkCorrect(self.server)">
            <style targetArrow="NoDecoration" sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
              <centerLabelStyleDescription labelSize="12" showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="ComponentImplementation" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self/]" domainClass="edtimplementation::ComponentImplementation">
          <borderedNodeMappings name="References" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.ComponentDefinitionReferences/]" domainClass="edtimplementation::ReferenceOfLinkedComponentDefinition">
            <borderedNodeMappings name="OperationsReferencesEvent" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::EventDefinitionInstance">
              <conditionnalStyles predicateExpression="service:eventReceivedWithoutError()">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="service:eventReceivedWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="service:eventSentWithoutError()">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="service:eventSentWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <borderedNodeMappings name="OperationsReferencesRequest" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::RequestLinkServer">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ServerLogo.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>EAST</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
              <conditionnalStyles predicateExpression="service:operationsWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="4" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ServerLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <borderedNodeMappings name="OperationsReferencesData" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::VersionedDataReferenceInstance">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/WriterLogo.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>EAST</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
              <conditionnalStyles predicateExpression="service:operationsWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="4" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/WriterLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionReferenceLink.name/]" sizeComputationExpression="service:giveComponentImplementationReferenceSize()" labelPosition="node" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/component_reference.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
            <conditionnalStyles predicateExpression="service:referenceOfLinkedWithError()">
              <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="8" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionReferenceLink.name/]" sizeComputationExpression="service:giveComponentImplementationReferenceSize()" labelPosition="node" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/component_reference.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="Services" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.ComponentDefinitionServices/]" domainClass="edtimplementation::ServiceOfLinkedComponentDefinition">
            <borderedNodeMappings name="OperationsServicesEvent" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::EventDefinitionInstance">
              <conditionnalStyles predicateExpression="service:eventReceivedWithoutError()">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="service:eventReceivedWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="service:eventSentWithoutError()">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="service:eventSentWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="3" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <borderedNodeMappings name="OperationsServicesRequest" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::RequestLinkClient">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ClientLogo.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
              <conditionnalStyles predicateExpression="service:operationsWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="4" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ClientLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <borderedNodeMappings name="OperationsServicesData" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::VersionedDataServiceInstance">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReaderLogo.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
              <conditionnalStyles predicateExpression="service:operationsWithError()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="4" labelSize="12" showIcon="false" labelExpression="" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReaderLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionServiceLink.name/]" sizeComputationExpression="service:giveComponentImplementationServiceSize()" labelPosition="node" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/component_service.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>SOUTH</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
            <conditionnalStyles predicateExpression="service:serviceOfLinkedWithError()">
              <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="8" labelSize="12" showIcon="false" labelExpression="[self.ComponentDefinitionServiceLink.name/]" sizeComputationExpression="service:giveComponentImplementationServiceSize()" labelPosition="node" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/component_service.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>EAST</forbiddenSides>
                <forbiddenSides>NORTH</forbiddenSides>
              </style>
            </conditionnalStyles>
          </borderedNodeMappings>
          <borderedNodeMappings name="External" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self/]" domainClass="edtimplementation::ComponentImplementation">
            <borderedNodeMappings name="OperationsExternal" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.ExternalSenders/]" domainClass="edtimplementation::ExternalSenderOperation">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="" tooltipExpression="[self.name/]" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <forbiddenSides>WEST</forbiddenSides>
                <forbiddenSides>SOUTH</forbiddenSides>
                <forbiddenSides>EAST</forbiddenSides>
              </style>
              <conditionnalStyles predicateExpression="service:hasNoLink()">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:'External'" sizeComputationExpression="service:giveComponentImplementationExternalSize()" labelPosition="node" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/component.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <forbiddenSides>WEST</forbiddenSides>
              <forbiddenSides>EAST</forbiddenSides>
              <forbiddenSides>NORTH</forbiddenSides>
            </style>
          </borderedNodeMappings>
          <subContainerMappings name="ModuleInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.instances/]" domainClass="edtimplementation::ModuleInstance">
            <borderedNodeMappings name="OperationsModuleInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::OperationInstance">
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::RequestLinkServer) and self.operationsWithWarning()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ServerLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::DataLinkWriter) and self.operationsWithWarning()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/WriterLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::RequestLinkClient) and self.operationsWithWarning()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" labelAlignment="RIGHT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ClientLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::DataLinkReader) and self.operationsWithWarning()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" labelAlignment="RIGHT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReaderLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkSender)and self.operationsWithWarning()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkReceiver)and self.operationsWithWarning()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::RequestLinkServer)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ServerLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::DataLinkWriter)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelAlignment="LEFT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/WriterLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::RequestLinkClient)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelAlignment="RIGHT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ClientLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::DataLinkReader)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelAlignment="RIGHT" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReaderLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>SOUTH</forbiddenSides>
                  <forbiddenSides>NORTH</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkSender)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkReceiver)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" widthComputationExpression="service:giveModuleInstanceSizeWidth()" heightComputationExpression="service:giveModuleInstanceSizeHeight()">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
            <conditionnalStyles predicateExpression="service:moduleInstanceWithError()">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="8" labelSize="12" showIcon="false" widthComputationExpression="service:giveModuleInstanceSizeWidth()" heightComputationExpression="service:giveModuleInstanceSizeHeight()">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <subContainerMappings name="DynamicTriggerInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.instances/]" domainClass="edtimplementation::DynamicTriggerInstance">
            <borderedNodeMappings name="OperationsDynamicTriggerInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::OperationInstance">
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkSender)and self.hasNoLinks()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkReceiver)and self.hasNoLinks()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkSender)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkReceiver)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" widthComputationExpression="30" heightComputationExpression="10">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="TriggerInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.instances/]" domainClass="edtimplementation::TriggerInstance">
            <borderedNodeMappings name="OperationsTriggerInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.Operations/]" domainClass="edtimplementation::OperationInstance">
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkSender)and self.hasNoLinks()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkReceiver)and self.hasNoLinks()/]">
                <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="5" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkSender)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/SentLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="[self.oclIsKindOf(edtimplementation::EventLinkReceiver)/]">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" tooltipExpression="[self.name/]" hideLabelByDefault="true" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/com.dassault.edt.ui/icons/ReceiverLogo.png">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <forbiddenSides>WEST</forbiddenSides>
                  <forbiddenSides>EAST</forbiddenSides>
                </style>
              </conditionnalStyles>
            </borderedNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" heightComputationExpression="10">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="" hideLabelByDefault="true" roundedCorner="true" heightComputationExpression="service:giveComponentImplementationSizeHeight()" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="service:componentImplementationWithError()">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" borderSizeComputationExpression="8" labelSize="12" showIcon="false" labelExpression="" hideLabelByDefault="true" roundedCorner="true" heightComputationExpression="service:giveComponentImplementationSizeHeight()" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </conditionnalStyles>
        </containerMappings>
        <toolSections name="Creation">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Create new DataLink" precondition="service:preSource.isDataLinkCorrect(preTarget)" edgeMappings="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='DataLinkActivatableFifo'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='DataLinkService']" iconPath="/com.dassault.edt.ui/icons/24x24/DataLink24.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[thisEObject.eContainer(edtimplementation::ComponentImplementation)/]">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DataReaderInstance)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkActivatableFifo" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::VersionedDataServiceInstance)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkToServiceOperation" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DataReaderInstance)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkActivatableFifo" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::VersionedDataServiceInstance)/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkToServiceOperation" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Create new RequestLink" precondition="service:preSource.isRequestLinkCorrect(preTarget)" edgeMappings="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='RequestLinkFromRequestSentToRef'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='RequestLinkFromRequestSentToRequestReceived'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='RequestLinkFromServiceToRequestReceived']" iconPath="/com.dassault.edt.ui/icons/24x24/RequestLink24.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[thisEObject.eContainer(edtimplementation::ComponentImplementation)/]">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::RequestServerInstance)and(source.oclIsKindOf(edtimplementation::RequestServiceInstance))/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatableFifo" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::RequestServerInstance)and(source.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingActivatableFifo" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::RequestReferenceInstance)and(source.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingToReferenceOperation" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:source"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::RequestServerInstance)and(target.oclIsKindOf(edtimplementation::RequestServiceInstance))/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatableFifo" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::RequestServerInstance)and(target.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingActivatableFifo" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::RequestReferenceInstance)and(target.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingToReferenceOperation" referenceName="OperationLinks">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:target"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Create new EventLink" precondition="service:preSource.isEventLinkCorrect(preTarget)" edgeMappings="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='EventLinkActivatableFifo'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='EventLinkActivatableFifoFromTrigger'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='EventLinkActivatingFifo'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='EventLinkActivatingFifoFromTrigger'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='EventLinkToDefinitionOperation'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@edgeMappings[name='EventLinkToDefinitionOperationFromTrigger']" iconPath="/com.dassault.edt.ui/icons/24x24/EventLink24.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[thisEObject.eContainer(edtimplementation::ComponentImplementation)/]">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="service:source.checkSender()">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventSenderInstance) or (source.oclIsKindOf(edtimplementation::ExternalSenderOperation)) or (source.oclIsKindOf(edtimplementation::DynamicTriggerEventSenderInstance))/]">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="service:target.checkReceiver()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperation" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::TriggerSender)/]">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifoFromTrigger" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="service:target.checkReceiver()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperationFromTrigger" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifoFromTrigger" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="service:target.checkSender()">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventSenderInstance) or (target.oclIsKindOf(edtimplementation::ExternalSenderOperation)) or (target.oclIsKindOf(edtimplementation::DynamicTriggerEventSenderInstance))/]">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="service:source.checkReceiver()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperation" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::TriggerSender)/]">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifoFromTrigger" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="service:source.checkReceiver()">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperationFromTrigger" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifoFromTrigger" referenceName="OperationLinks">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="NoDelete" precondition="false">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:RemoveElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="No Paste" precondition="false" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Create..." precondition="[self.oclIsKindOf(edtimplementation::OperationInstance)/]">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="All Links">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[self/]">
                  <subModelOperations xsi:type="tool_1:Let" variableName="source" valueExpression="var:self"/>
                  <subModelOperations xsi:type="tool_1:For" expression="service:source.findOperationInstance()" iteratorName="target">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[self.eContainer().eContainer()/]">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="[(source.oclIsKindOf(edtimplementation::DataLinkWriter)or source.oclIsKindOf(edtimplementation::DataLinkReader)) and(source.isDataLinkCorrect(target))/]">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DataReaderInstance)/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkActivatableFifo" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:source"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::VersionedDataServiceInstance)/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkToServiceOperation" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:source"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DataReaderInstance)/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkActivatableFifo" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::VersionedDataServiceInstance)/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::DataLinkToServiceOperation" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="writer" valueExpression="var:target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="reader" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="[(source.oclIsKindOf(edtimplementation::EventLinkSender)or source.oclIsKindOf(edtimplementation::EventLinkReceiver)) and(source.isEventLinkCorrect(target))/]">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="service:source.checkSender()">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventSenderInstance) or (source.oclIsKindOf(edtimplementation::ExternalSenderOperation)) or (source.oclIsKindOf(edtimplementation::DynamicTriggerEventSenderInstance))/]">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="service:target.checkReceiver()">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperation" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::TriggerSender)/]">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifoFromTrigger" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="service:target.checkReceiver()">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperationFromTrigger" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifoFromTrigger" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:source"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:target"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="service:target.checkSender()">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::EventSenderInstance) or (target.oclIsKindOf(edtimplementation::ExternalSenderOperation)) or (target.oclIsKindOf(edtimplementation::DynamicTriggerEventSenderInstance))/]">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifo" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="service:source.checkReceiver()">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperation" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::TriggerSender)/]">
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::EventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatableFifoFromTrigger" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="service:source.checkReceiver()">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkToDefinitionOperationFromTrigger" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance)/]">
                            <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::EventLinkActivatingFifoFromTrigger" referenceName="OperationLinks">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="sender" valueExpression="var:target"/>
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="receiver" valueExpression="var:source"/>
                            </subModelOperations>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="[(source.oclIsKindOf(edtimplementation::RequestLinkClient)or source.oclIsKindOf(edtimplementation::RequestLinkServer)) and(source.isRequestLinkCorrect(target))/]">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::RequestServerInstance)and(source.oclIsKindOf(edtimplementation::RequestServiceInstance))/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatableFifo" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::RequestServerInstance)and(source.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingActivatableFifo" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[target.oclIsKindOf(edtimplementation::RequestReferenceInstance)and(source.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingToReferenceOperation" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:target"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:source"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::RequestServerInstance)and(target.oclIsKindOf(edtimplementation::RequestServiceInstance))/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatableFifo" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:source"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::RequestServerInstance)and(target.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingActivatableFifo" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:source"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="[source.oclIsKindOf(edtimplementation::RequestReferenceInstance)and(target.oclIsKindOf(edtimplementation::RequestClientInstance))/]">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="edtimplementation::RequestLinkActivatingToReferenceOperation" referenceName="OperationLinks">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="server" valueExpression="var:source"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="client" valueExpression="var:target"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
        <toolSections name="Legend">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Reference" iconPath="/com.dassault.edt.ui/icons/24x24/output-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Service" iconPath="/com.dassault.edt.ui/icons/24x24/intput-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Writer (Data)" iconPath="/com.dassault.edt.ui/icons/24x24/writerlogo-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Reader (Data)" iconPath="/com.dassault.edt.ui/icons/24x24/readerlogo-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Client (Request)" iconPath="/com.dassault.edt.ui/icons/24x24/clientlogo-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Server (Request)" iconPath="/com.dassault.edt.ui/icons/24x24/serverlogo-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Sender (Event)" iconPath="/com.dassault.edt.ui/icons/24x24/sentlogo-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Receiver (Event)" iconPath="/com.dassault.edt.ui/icons/24x24/receiverlogo-24.png">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Find in..." precondition="aql:not(self.oclIsKindOf(edtimplementation::OperationLink) or self.oclIsKindOf(edtimplementation::OperationInheritingFromSD) or self.oclIsKindOf(edtimplementation::OperationInheritingFromMT) or self.oclIsKindOf(edtimplementation::DynamicTriggerEventReceiverInstance) or self.oclIsKindOf(edtimplementation::DynamicTriggerEventSenderInstance) or self.oclIsKindOf(edtimplementation::TriggerSender) or self.oclIsKindOf(edtimplementation::ServRefOfLinkedComponentDefinition)">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="TreeView">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInTreeView()"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Find Defining Operation in..." precondition="aql:self.oclIsKindOf(edtimplementation::OperationInheritingFromSD) or self.oclIsKindOf(edtimplementation::OperationInheritingFromMT)">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="TreeView">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findDefiningOperationInTreeView()"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Find Service Definition in..." precondition="aql:self.oclIsKindOf(edtimplementation::ServRefOfLinkedComponentDefinition)">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="TreeView">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findServiceDefinitionInTreeView()"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Find Implemented Service in..." precondition="aql:self.oclIsKindOf(edtimplementation::ServRefOfLinkedComponentDefinition)">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="TreeView">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findComponentDefinitionServRefInTreeView()"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="LogicalSystemDeployment" label="Logical System And Deployment Schema Graphical View" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" domainClass="edtlogical::LogicalSystem" enablePopupBars="true">
      <metamodel href="../../plugins/com.dassault.edt.model/model/EDTDeployment.ecore#/"/>
      <metamodel href="../../plugins/com.dassault.edt.model/model/EDTLogicalSystem.ecore#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="PlatformLink" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.logicalComputingPlatformLinks/]" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@containerMappings[name='Logical%20Platform']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@containerMappings[name='Logical%20Platform']" targetFinderExpression="[self.to/]" sourceFinderExpression="[self.from/]" domainClass="edtlogical::LogicalComputingPlatformLink" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="NodeLink" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='ComponentImplementationDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste'] //@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.logicalComputingPlatforms.logicalComputingNodeLinks/]" sourceMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@containerMappings[name='Logical%20Platform']/@subContainerMappings[name='Logical%20Node']" targetMapping="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@containerMappings[name='Logical%20Platform']/@subContainerMappings[name='Logical%20Node']" targetFinderExpression="[self.to/]" sourceFinderExpression="[self.from/]" domainClass="edtlogical::LogicalComputingNodeLink" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Logical Platform" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.logicalComputingPlatforms/]" domainClass="edtlogical::LogicalComputingPlatform" childrenPresentation="HorizontalStack">
          <subContainerMappings name="Logical Node" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.logicalComputingNodes/]" domainClass="edtlogical::LogicalComputingNode" childrenPresentation="HorizontalStack">
            <subContainerMappings name="Protection Domain" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.ProtectionDomainLink/]" domainClass="edtdeployment::ProtectionDomain">
              <subContainerMappings name="Deployed ModuleInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.deployedModuleInstances/]" domainClass="edtdeployment::DeployedModuleInstance" childrenPresentation="List">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="[self.ModuleInstance.name/]">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                </style>
              </subContainerMappings>
              <subContainerMappings name="Deployed TriggerInstance" pasteDescriptions="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='No%20Paste']" deletionDescription="//@ownedViewpoints[name='ecoadt']/@ownedRepresentations[name='LogicalSystemDeployment']/@defaultLayer/@toolSections.0/@ownedTools[name='NoDelete']" semanticCandidatesExpression="[self.deployedTriggerInstances/]" domainClass="edtdeployment::DeployedTriggerInstance">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="[self.TriggerInstance.name/]">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                </style>
              </subContainerMappings>
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="[self.name/]" roundedCorner="true" backgroundStyle="Liquid">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="[self.id/]" roundedCorner="true" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" borderSizeComputationExpression="2" labelSize="12" showIcon="false" labelExpression="[self.id/]" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <toolSections name="Legend">
          <ownedTools xsi:type="tool:DeleteElementDescription" name="NoDelete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PasteDescription" name="No Paste" precondition="false" forceRefresh="true">
            <container name="container"/>
            <containerView name="containerView"/>
            <copiedView name="copiedView"/>
            <copiedElement name="copiedElement"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:RemoveElement"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Logical Computing Platform" iconPath="/com.dassault.edt.ui/icons/24x24/logical.PNG">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Logical Computing Node" iconPath="/com.dassault.edt.ui/icons/24x24/node.PNG">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Protection Domain" iconPath="/com.dassault.edt.ui/icons/24x24/protection.PNG">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Deployed Instance" iconPath="/com.dassault.edt.ui/icons/24x24/deployed.PNG">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Logical Computing Node Link" iconPath="/com.dassault.edt.ui/icons/24x24/RequestLink24.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Logical Computing Platform Link" iconPath="/com.dassault.edt.ui/icons/24x24/service_link 24.png">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Find in...">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="TreeView">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.findInTreeView()"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesCopy"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDefaultName"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDeletionVerification"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesLinkDeletionVerification"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesUtils"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDefaultNameStep0"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDefaultNameStep1"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDefaultNameStep2"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDefaultNameStep4"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDefaultNameStep5"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesCopyStep0"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesCopyStep1"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesCopyStep2"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesCopyStep4"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesCopyStep5"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesCopyOperationLinks"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesSize"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesDisplay"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesError"/>
    <ownedJavaExtensions qualifiedClassName="com.dassault.edt.design.services.EcoaDtServicesOperationError"/>
  </ownedViewpoints>
</description:Group>
