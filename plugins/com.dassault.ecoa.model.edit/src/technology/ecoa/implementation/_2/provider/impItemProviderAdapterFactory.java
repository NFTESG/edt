/**
 * Copyright (c) 2023 Dassault Aviation
 *
 * SPDX-License-Identifier: MIT
 *
 */

package technology.ecoa.implementation._2.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import technology.ecoa.implementation._2.util.impAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class impItemProviderAdapterFactory extends impAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public impItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ClientsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClientsTypeItemProvider clientsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ClientsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClientsTypeAdapter() {
		if (clientsTypeItemProvider == null) {
			clientsTypeItemProvider = new ClientsTypeItemProvider(this);
		}

		return clientsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ComponentImplementation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComponentImplementationItemProvider componentImplementationItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ComponentImplementation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComponentImplementationAdapter() {
		if (componentImplementationItemProvider == null) {
			componentImplementationItemProvider = new ComponentImplementationItemProvider(this);
		}

		return componentImplementationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.DataLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataLinkItemProvider dataLinkItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.DataLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataLinkAdapter() {
		if (dataLinkItemProvider == null) {
			dataLinkItemProvider = new DataLinkItemProvider(this);
		}

		return dataLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.DataReadType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataReadTypeItemProvider dataReadTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.DataReadType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataReadTypeAdapter() {
		if (dataReadTypeItemProvider == null) {
			dataReadTypeItemProvider = new DataReadTypeItemProvider(this);
		}

		return dataReadTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.DataWrittenType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataWrittenTypeItemProvider dataWrittenTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.DataWrittenType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataWrittenTypeAdapter() {
		if (dataWrittenTypeItemProvider == null) {
			dataWrittenTypeItemProvider = new DataWrittenTypeItemProvider(this);
		}

		return dataWrittenTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.DynamicTriggerInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicTriggerInstanceItemProvider dynamicTriggerInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.DynamicTriggerInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicTriggerInstanceAdapter() {
		if (dynamicTriggerInstanceItemProvider == null) {
			dynamicTriggerInstanceItemProvider = new DynamicTriggerInstanceItemProvider(this);
		}

		return dynamicTriggerInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.Event} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventItemProvider eventItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.Event}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventAdapter() {
		if (eventItemProvider == null) {
			eventItemProvider = new EventItemProvider(this);
		}

		return eventItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.EventLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventLinkItemProvider eventLinkItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.EventLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventLinkAdapter() {
		if (eventLinkItemProvider == null) {
			eventLinkItemProvider = new EventLinkItemProvider(this);
		}

		return eventLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.EventReceivedType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventReceivedTypeItemProvider eventReceivedTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.EventReceivedType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventReceivedTypeAdapter() {
		if (eventReceivedTypeItemProvider == null) {
			eventReceivedTypeItemProvider = new EventReceivedTypeItemProvider(this);
		}

		return eventReceivedTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.Instance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceItemProvider instanceItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.Instance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceAdapter() {
		if (instanceItemProvider == null) {
			instanceItemProvider = new InstanceItemProvider(this);
		}

		return instanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ModuleImplementation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleImplementationItemProvider moduleImplementationItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ModuleImplementation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleImplementationAdapter() {
		if (moduleImplementationItemProvider == null) {
			moduleImplementationItemProvider = new ModuleImplementationItemProvider(this);
		}

		return moduleImplementationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ModuleInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleInstanceItemProvider moduleInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ModuleInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleInstanceAdapter() {
		if (moduleInstanceItemProvider == null) {
			moduleInstanceItemProvider = new ModuleInstanceItemProvider(this);
		}

		return moduleInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ModuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModuleTypeItemProvider moduleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ModuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModuleTypeAdapter() {
		if (moduleTypeItemProvider == null) {
			moduleTypeItemProvider = new ModuleTypeItemProvider(this);
		}

		return moduleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.OperationsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationsTypeItemProvider operationsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.OperationsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationsTypeAdapter() {
		if (operationsTypeItemProvider == null) {
			operationsTypeItemProvider = new OperationsTypeItemProvider(this);
		}

		return operationsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.OpRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpRefItemProvider opRefItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.OpRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpRefAdapter() {
		if (opRefItemProvider == null) {
			opRefItemProvider = new OpRefItemProvider(this);
		}

		return opRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.OpRefActivatable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpRefActivatableItemProvider opRefActivatableItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.OpRefActivatable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpRefActivatableAdapter() {
		if (opRefActivatableItemProvider == null) {
			opRefActivatableItemProvider = new OpRefActivatableItemProvider(this);
		}

		return opRefActivatableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.OpRefActivatableFifo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpRefActivatableFifoItemProvider opRefActivatableFifoItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.OpRefActivatableFifo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpRefActivatableFifoAdapter() {
		if (opRefActivatableFifoItemProvider == null) {
			opRefActivatableFifoItemProvider = new OpRefActivatableFifoItemProvider(this);
		}

		return opRefActivatableFifoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.OpRefActivatingFifo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpRefActivatingFifoItemProvider opRefActivatingFifoItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.OpRefActivatingFifo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpRefActivatingFifoAdapter() {
		if (opRefActivatingFifoItemProvider == null) {
			opRefActivatingFifoItemProvider = new OpRefActivatingFifoItemProvider(this);
		}

		return opRefActivatingFifoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.OpRefExternal} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpRefExternalItemProvider opRefExternalItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.OpRefExternal}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpRefExternalAdapter() {
		if (opRefExternalItemProvider == null) {
			opRefExternalItemProvider = new OpRefExternalItemProvider(this);
		}

		return opRefExternalItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.OpRefTrigger} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpRefTriggerItemProvider opRefTriggerItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.OpRefTrigger}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpRefTriggerAdapter() {
		if (opRefTriggerItemProvider == null) {
			opRefTriggerItemProvider = new OpRefTriggerItemProvider(this);
		}

		return opRefTriggerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.Parameter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterItemProvider parameterItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.Parameter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterAdapter() {
		if (parameterItemProvider == null) {
			parameterItemProvider = new ParameterItemProvider(this);
		}

		return parameterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PinfoType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PinfoTypeItemProvider pinfoTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PinfoType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPinfoTypeAdapter() {
		if (pinfoTypeItemProvider == null) {
			pinfoTypeItemProvider = new PinfoTypeItemProvider(this);
		}

		return pinfoTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PinfoType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PinfoType1ItemProvider pinfoType1ItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PinfoType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPinfoType1Adapter() {
		if (pinfoType1ItemProvider == null) {
			pinfoType1ItemProvider = new PinfoType1ItemProvider(this);
		}

		return pinfoType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PinfoValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PinfoValueItemProvider pinfoValueItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PinfoValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPinfoValueAdapter() {
		if (pinfoValueItemProvider == null) {
			pinfoValueItemProvider = new PinfoValueItemProvider(this);
		}

		return pinfoValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PrivatePinfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PrivatePinfoItemProvider privatePinfoItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PrivatePinfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPrivatePinfoAdapter() {
		if (privatePinfoItemProvider == null) {
			privatePinfoItemProvider = new PrivatePinfoItemProvider(this);
		}

		return privatePinfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertiesTypeItemProvider propertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertiesTypeAdapter() {
		if (propertiesTypeItemProvider == null) {
			propertiesTypeItemProvider = new PropertiesTypeItemProvider(this);
		}

		return propertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PropertyValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyValueItemProvider propertyValueItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PropertyValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyValueAdapter() {
		if (propertyValueItemProvider == null) {
			propertyValueItemProvider = new PropertyValueItemProvider(this);
		}

		return propertyValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PropertyValues} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyValuesItemProvider propertyValuesItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PropertyValues}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyValuesAdapter() {
		if (propertyValuesItemProvider == null) {
			propertyValuesItemProvider = new PropertyValuesItemProvider(this);
		}

		return propertyValuesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.PublicPinfo} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PublicPinfoItemProvider publicPinfoItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.PublicPinfo}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPublicPinfoAdapter() {
		if (publicPinfoItemProvider == null) {
			publicPinfoItemProvider = new PublicPinfoItemProvider(this);
		}

		return publicPinfoItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ReadersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadersTypeItemProvider readersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ReadersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadersTypeAdapter() {
		if (readersTypeItemProvider == null) {
			readersTypeItemProvider = new ReadersTypeItemProvider(this);
		}

		return readersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ReceiversType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReceiversTypeItemProvider receiversTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ReceiversType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReceiversTypeAdapter() {
		if (receiversTypeItemProvider == null) {
			receiversTypeItemProvider = new ReceiversTypeItemProvider(this);
		}

		return receiversTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.RequestLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestLinkItemProvider requestLinkItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.RequestLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestLinkAdapter() {
		if (requestLinkItemProvider == null) {
			requestLinkItemProvider = new RequestLinkItemProvider(this);
		}

		return requestLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.RequestReceivedType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestReceivedTypeItemProvider requestReceivedTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.RequestReceivedType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestReceivedTypeAdapter() {
		if (requestReceivedTypeItemProvider == null) {
			requestReceivedTypeItemProvider = new RequestReceivedTypeItemProvider(this);
		}

		return requestReceivedTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.RequestResponse} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestResponseItemProvider requestResponseItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.RequestResponse}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestResponseAdapter() {
		if (requestResponseItemProvider == null) {
			requestResponseItemProvider = new RequestResponseItemProvider(this);
		}

		return requestResponseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.RequestSentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequestSentTypeItemProvider requestSentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.RequestSentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRequestSentTypeAdapter() {
		if (requestSentTypeItemProvider == null) {
			requestSentTypeItemProvider = new RequestSentTypeItemProvider(this);
		}

		return requestSentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.SendersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SendersTypeItemProvider sendersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.SendersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSendersTypeAdapter() {
		if (sendersTypeItemProvider == null) {
			sendersTypeItemProvider = new SendersTypeItemProvider(this);
		}

		return sendersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ServerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServerTypeItemProvider serverTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ServerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServerTypeAdapter() {
		if (serverTypeItemProvider == null) {
			serverTypeItemProvider = new ServerTypeItemProvider(this);
		}

		return serverTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.ServiceQoS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceQoSItemProvider serviceQoSItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.ServiceQoS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceQoSAdapter() {
		if (serviceQoSItemProvider == null) {
			serviceQoSItemProvider = new ServiceQoSItemProvider(this);
		}

		return serviceQoSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.TriggerInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggerInstanceItemProvider triggerInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.TriggerInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggerInstanceAdapter() {
		if (triggerInstanceItemProvider == null) {
			triggerInstanceItemProvider = new TriggerInstanceItemProvider(this);
		}

		return triggerInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.UseType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UseTypeItemProvider useTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.UseType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUseTypeAdapter() {
		if (useTypeItemProvider == null) {
			useTypeItemProvider = new UseTypeItemProvider(this);
		}

		return useTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.VersionedData} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VersionedDataItemProvider versionedDataItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.VersionedData}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVersionedDataAdapter() {
		if (versionedDataItemProvider == null) {
			versionedDataItemProvider = new VersionedDataItemProvider(this);
		}

		return versionedDataItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link technology.ecoa.implementation._2.WritersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WritersTypeItemProvider writersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link technology.ecoa.implementation._2.WritersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWritersTypeAdapter() {
		if (writersTypeItemProvider == null) {
			writersTypeItemProvider = new WritersTypeItemProvider(this);
		}

		return writersTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (clientsTypeItemProvider != null) clientsTypeItemProvider.dispose();
		if (componentImplementationItemProvider != null) componentImplementationItemProvider.dispose();
		if (dataLinkItemProvider != null) dataLinkItemProvider.dispose();
		if (dataReadTypeItemProvider != null) dataReadTypeItemProvider.dispose();
		if (dataWrittenTypeItemProvider != null) dataWrittenTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (dynamicTriggerInstanceItemProvider != null) dynamicTriggerInstanceItemProvider.dispose();
		if (eventItemProvider != null) eventItemProvider.dispose();
		if (eventLinkItemProvider != null) eventLinkItemProvider.dispose();
		if (eventReceivedTypeItemProvider != null) eventReceivedTypeItemProvider.dispose();
		if (instanceItemProvider != null) instanceItemProvider.dispose();
		if (moduleImplementationItemProvider != null) moduleImplementationItemProvider.dispose();
		if (moduleInstanceItemProvider != null) moduleInstanceItemProvider.dispose();
		if (moduleTypeItemProvider != null) moduleTypeItemProvider.dispose();
		if (operationsTypeItemProvider != null) operationsTypeItemProvider.dispose();
		if (opRefItemProvider != null) opRefItemProvider.dispose();
		if (opRefActivatableItemProvider != null) opRefActivatableItemProvider.dispose();
		if (opRefActivatableFifoItemProvider != null) opRefActivatableFifoItemProvider.dispose();
		if (opRefActivatingFifoItemProvider != null) opRefActivatingFifoItemProvider.dispose();
		if (opRefExternalItemProvider != null) opRefExternalItemProvider.dispose();
		if (opRefTriggerItemProvider != null) opRefTriggerItemProvider.dispose();
		if (parameterItemProvider != null) parameterItemProvider.dispose();
		if (pinfoTypeItemProvider != null) pinfoTypeItemProvider.dispose();
		if (pinfoType1ItemProvider != null) pinfoType1ItemProvider.dispose();
		if (pinfoValueItemProvider != null) pinfoValueItemProvider.dispose();
		if (privatePinfoItemProvider != null) privatePinfoItemProvider.dispose();
		if (propertiesTypeItemProvider != null) propertiesTypeItemProvider.dispose();
		if (propertyValueItemProvider != null) propertyValueItemProvider.dispose();
		if (propertyValuesItemProvider != null) propertyValuesItemProvider.dispose();
		if (publicPinfoItemProvider != null) publicPinfoItemProvider.dispose();
		if (readersTypeItemProvider != null) readersTypeItemProvider.dispose();
		if (receiversTypeItemProvider != null) receiversTypeItemProvider.dispose();
		if (requestLinkItemProvider != null) requestLinkItemProvider.dispose();
		if (requestReceivedTypeItemProvider != null) requestReceivedTypeItemProvider.dispose();
		if (requestResponseItemProvider != null) requestResponseItemProvider.dispose();
		if (requestSentTypeItemProvider != null) requestSentTypeItemProvider.dispose();
		if (sendersTypeItemProvider != null) sendersTypeItemProvider.dispose();
		if (serverTypeItemProvider != null) serverTypeItemProvider.dispose();
		if (serviceQoSItemProvider != null) serviceQoSItemProvider.dispose();
		if (triggerInstanceItemProvider != null) triggerInstanceItemProvider.dispose();
		if (useTypeItemProvider != null) useTypeItemProvider.dispose();
		if (versionedDataItemProvider != null) versionedDataItemProvider.dispose();
		if (writersTypeItemProvider != null) writersTypeItemProvider.dispose();
	}

}
